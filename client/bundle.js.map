{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./client/js/utils/constants.js","webpack:///./client/js/helpers/elements.js","webpack:///./client/js/app.js","webpack:///./client/js/states/boot.js","webpack:///./client/js/states/preload.js","webpack:///./client/js/states/menu.js","webpack:///./client/js/states/select_map.js","webpack:///./client/js/states/pending_game.js","webpack:///./client/js/states/play.js","webpack:///./client/js/utils/utils.js","webpack:///./client/js/entities/player.js","webpack:///./client/js/entities/info.js","webpack:///./client/js/entities/enemy_player.js","webpack:///./client/js/entities/bomb.js","webpack:///./client/js/entities/spoil.js","webpack:///./client/js/entities/fire_blast.js","webpack:///./client/js/entities/bone.js","webpack:///./client/js/states/win.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Text","_ref","_this","game","x","y","text","style","_classCallCheck","this","_possibleConstructorReturn","__proto__","getPrototypeOf","anchor","setTo","add","existing","Phaser","Button","_ref2","_this2","asset","callback","callbackContext","overFrame","outFrame","downFrame","upFrame","TextButton","_ref3","_this3","label","addChild","setFrames","inputEnabled","input","useHandCursor","GameSlots","_ref4","_this4","availableGames","yOffset","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","iterator","next","done","availableGame","gameBox","Image","button","width","game_id","id","concat","err","return","Group","callAll","PlayerSlots","_ref5","_this5","max_players","players","asset_empty","asset_player","xOffset","slotBox","slotName","_player","skin","height","SpoilNotification","_ref6","_this6","picture","tween","to","alpha","onComplete","finish","start","_boot","_interopRequireDefault","_preload","_menu","_select_map","_pending_game","_play","_win","Game","AUTO","config","state","default","_elements","State","stage","disableVisibilityChange","world","centerX","centerY","font","fill","load","image","spritesheet","tilemap","Tilemap","TILED_JSON","slotsWithGame","clientSocket","on","displayPendingGames","stroke","strokeThickness","hostGameAction","emit","destroy","joinGameAction","_constants","slider","phaseSlider","hotMapImage","coldMapImage","createSlider","customHandlePrev","customHandleNext","objects","confirmStageSelection","map_name","AVAILABLE_MAPS","getCurrentIndex","joinToNewGame","slotsWithPlayer","displayGameInfo","launchGame","gameTitle","startGameButton","startGameAction","disable","leaveGameAction","current_game","values","length","console","log","enable","_utils","_enemy_player","_bomb","_spoil","_fire_blast","_bone","currentGame","createMap","createPlayers","setEventHandlers","time","events","loop","stopAnimationLoop","physics","arcade","collide","player","blockLayer","enemies","bombs","overlap","spoils","onPlayerVsSpoil","blasts","onPlayerVsBlast","map","addTilesetImage","TILESET","createLayer","LAYER","resizeWorld","setCollision","layer","properties","collisionTiles","bones","group","_arr","_i","setup","spawn","onMovePlayer","onPlayerWin","onShowBomb","onDetonateBomb","onSpoilWasPicked","onShowBones","onPlayerDisconnect","spoil","spoil_id","kill","blast","alive","col","currentCol","row","currentRow","becomesDead","player_id","enemy","findFrom","goTo","children","lastMoveAt","now","animations","stop","bomb_id","blastedCells","findAndDestroyFrom","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","cell","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","destroyed","putTile","empty","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","spoil_type","pickSpoil","winner_skin","entities","entity","_info","Player","prevPosition","delay","INITIAL_DELAY","power","INITIAL_POWER","speed","INITIAL_SPEED","_lastBombTime","body","setSize","PING","positionUpdaterLoop","info","defineKeyboard","defineSelf","Sprite","handleMoves","handleBombs","upKey","keyboard","addKey","Keyboard","UP","downKey","DOWN","leftKey","LEFT","rightKey","RIGHT","spaceKey","SPACEBAR","velocity","set","animationsArray","isDown","push","currentAnimation","play","Math","floor","position","TILE_SIZE","newPosition","showDeadInfo","increaseSpeed","increasePower","increaseDelay","MAX_SPEED","STEP_SPEED","refreshStatistic","MIN_DELAY","STEP_DELAY","STEP_POWER","playerText","Info","align","redStyle","bootsIcon","speedText","speedLabel","powerIcon","powerText","powerLabel","delayIcon","delayText","delayLabel","deadText","visible","EnemyPlayer","currentPosition","immovable","animateFace","Easing","Linear","None","face","diffX","diffY","Bomb","centerCol","centerRow","scale","EXPLOSION_TIME","Spoil","DELAY","POWER","SPEED","FireBlast","type","Bone","winnerText","ENTER","returnToMenu"],"mappings":"aACA,IAAAA,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,GAAA,CACAG,EAAAH,EACAI,GAAA,EACAH,QAAA,IAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,yTClF8B,CAAC,UAAW,sBACnB,gBACA,qBAEE,oBACK,WACV,YAEC,UACA,UACA,kBAEQ,iBACH,eACD,oBACI,iBACH,gBACD,oBACI,eACH,iqCCnBbC,cAEX,SAAAA,EAAAC,GAAyC,IAAAC,EAA3BC,EAA2BF,EAA3BE,KAAMC,EAAqBH,EAArBG,EAAGC,EAAkBJ,EAAlBI,EAAGC,EAAeL,EAAfK,KAAMC,EAASN,EAATM,MAAS,OAAAC,EAAAC,KAAAT,IACvCE,EAAAQ,EAAAD,MAAAT,EAAAW,WAAAjC,OAAAkC,eAAAZ,IAAA7B,KAAAsC,KAAMN,EAAMC,EAAGC,EAAGC,EAAMC,KACnBM,OAAOC,MAAM,IAElBZ,EAAKC,KAAKY,IAAIC,SAAdd,GAJuCA,aAFjBe,OAAOjB,wBAWpBkB,cAEX,SAAAA,EAAAC,GAAuG,IAAAC,EAAzFjB,EAAyFgB,EAAzFhB,KAAMC,EAAmFe,EAAnFf,EAAGC,EAAgFc,EAAhFd,EAAGgB,EAA6EF,EAA7EE,MAAOC,EAAsEH,EAAtEG,SAAUC,EAA4DJ,EAA5DI,gBAAiBC,EAA2CL,EAA3CK,UAAWC,EAAgCN,EAAhCM,SAAUC,EAAsBP,EAAtBO,UAAWC,EAAWR,EAAXQ,QAAW,OAAAnB,EAAAC,KAAAS,IACrGE,EAAAV,EAAAD,MAAAS,EAAAP,WAAAjC,OAAAkC,eAAAM,IAAA/C,KAAAsC,KAAMN,EAAMC,EAAGC,EAAGgB,EAAOC,EAAUC,EAAiBC,EAAWC,EAAUC,EAAWC,KAC/Ed,OAAOC,MAAM,IAElBM,EAAKjB,KAAKY,IAAIC,SAAdI,GAJqGA,aAF7EH,OAAOC,4BAWtBU,cAEX,SAAAA,EAAAC,GAAqH,IAAAC,EAAvG3B,EAAuG0B,EAAvG1B,KAAMC,EAAiGyB,EAAjGzB,EAAGC,EAA8FwB,EAA9FxB,EAAGgB,EAA2FQ,EAA3FR,MAAOC,EAAoFO,EAApFP,SAAUC,EAA0EM,EAA1EN,gBAAiBC,EAAyDK,EAAzDL,UAAWC,EAA8CI,EAA9CJ,SAAUC,EAAoCG,EAApCH,UAAWC,EAAyBE,EAAzBF,QAASI,EAAgBF,EAAhBE,MAAOxB,EAASsB,EAATtB,MAAS,OAAAC,EAAAC,KAAAmB,IACnHE,EAAApB,EAAAD,MAAAmB,EAAAjB,WAAAjC,OAAAkC,eAAAgB,IAAAzD,KAAAsC,KAAMN,EAAMC,EAAGC,EAAGgB,EAAOC,EAAUC,EAAiBC,EAAWC,EAAUC,EAAWC,KAC/Ed,OAAOC,MAAM,IAElBgB,EAAKxB,KAAO,IAAIW,OAAOjB,KAAK8B,EAAK3B,KAAM,EAAG,EAAG4B,EAAOxB,GACpDuB,EAAKxB,KAAKO,OAAOC,MAAM,IAEvBgB,EAAKE,SAASF,EAAKxB,MAEnBwB,EAAK3B,KAAKY,IAAIC,SAAdc,GATmHA,aAFvFb,OAAOC,6CAenCT,KAAKwB,UAAU,EAAG,GAClBxB,KAAKyB,cAAe,EACpBzB,KAAK0B,MAAMC,eAAgB,mCAI3B3B,KAAKwB,UAAU,EAAG,EAAG,GACrBxB,KAAKyB,cAAe,EACpBzB,KAAK0B,MAAMC,eAAgB,8BAKlBC,cAEX,SAAAA,EAAAC,GAA8E,IAAAC,EAAhEpC,EAAgEmC,EAAhEnC,KAAMqC,EAA0DF,EAA1DE,eAAgBlB,EAA0CgB,EAA1ChB,SAAUC,EAAgCe,EAAhCf,gBAAiBnB,EAAekC,EAAflC,EAAGC,EAAYiC,EAAZjC,EAAGE,EAAS+B,EAAT/B,MAASC,EAAAC,KAAA4B,GAC5EE,EAAA7B,EAAAD,MAAA4B,EAAA1B,WAAAjC,OAAAkC,eAAAyB,IAAAlE,KAAAsC,KAAMN,IAEN,IAGIsC,EAAUpC,EAN8DqC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAQ5E,QAAAC,EAAAC,EAA0BP,EAA1BzD,OAAAiE,cAAAN,GAAAI,EAAAC,EAAAE,QAAAC,MAAAR,GAAA,EAA0C,KAAjCS,EAAiCL,EAAA7D,MACpCmE,EAAU,IAAInC,OAAOoC,MAAMd,EAAKpC,KAAMC,EAAGqC,EANzB,iBAOhBa,EAAS,IAAIrC,OAAOC,OAAOqB,EAAKpC,KAAMiD,EAAQG,MAAQ,IAAK,GAN1C,YAMgEjC,EAAS9B,KAAK+B,EAAiB,CAAEiC,QAASL,EAAcM,KAAO,KAAM,EAAG,EAAG,EAAG,GAC/JnD,EAAO,IAAIW,OAAOjB,KAAKuC,EAAKpC,KAAM,GAAI,GAA/B,cAAAuD,OAAiDP,EAAc5E,MAAQgC,GAElF6C,EAAQpB,SAASsB,GACjBF,EAAQpB,SAAS1B,GAEjBiC,EAAKxB,IAAIqC,GAETX,GAAW,KAlB+D,MAAAkB,GAAAhB,GAAA,EAAAC,EAAAe,EAAA,YAAAjB,GAAA,MAAAK,EAAAa,QAAAb,EAAAa,SAAA,WAAAjB,EAAA,MAAAC,GAAA,OAAAL,aAFjDtB,OAAO4C,4CAyBlCpD,KAAKqD,QAAQ,mCAIJC,cAEX,SAAAA,EAAAC,GAAoF,IAAAC,EAAtE9D,EAAsE6D,EAAtE7D,KAAM+D,EAAgEF,EAAhEE,YAAaC,EAAmDH,EAAnDG,QAAS/D,EAA0C4D,EAA1C5D,EAAGC,EAAuC2D,EAAvC3D,EAAG+D,EAAoCJ,EAApCI,YAAaC,EAAuBL,EAAvBK,aAAc9D,EAASyD,EAATzD,MAASC,EAAAC,KAAAsD,GAClFE,EAAAvD,EAAAD,MAAAsD,EAAApD,WAAAjC,OAAAkC,eAAAmD,IAAA5F,KAAAsC,KAAMN,IAIN,IAFA,IAAImE,EAAUlE,EAELpC,EAAI,EAAGA,EAAIkG,EAAalG,IAAK,CACpC,IAAIuG,SACAC,SACAC,EAAUN,EAAQnG,GAElByG,GACFF,EAAU,IAAItD,OAAOoC,MAAMY,EAAK9D,KAAMmE,EAASjE,EAAGgE,EAAaI,EAAQC,OACvEF,EAAW,IAAIvD,OAAOjB,KAAKiE,EAAK9D,KAAMoE,EAAQhB,MAAM,EAAGgB,EAAQI,OAAS,GAAIF,EAAQC,KAAMnE,IACjFM,OAAOC,MAAM,IACtByD,EAAQvC,SAASwC,IAEjBD,EAAU,IAAItD,OAAOoC,MAAMY,EAAK9D,KAAMmE,EAASjE,EAAG+D,GAGpDH,EAAKlD,IAAIwD,GACTD,GAAW,IApBqE,OAAAL,aAFrDhD,OAAO4C,4CA2BpCpD,KAAKqD,QAAQ,qCAIJc,cAEX,SAAAA,EAAAC,GAAmC,IAAAC,EAArB3E,EAAqB0E,EAArB1E,KAAMkB,EAAewD,EAAfxD,MAAOjB,EAAQyE,EAARzE,EAAGC,EAAKwE,EAALxE,EAAK,OAAAG,EAAAC,KAAAmE,IACjCE,EAAApE,EAAAD,MAAAmE,EAAAjE,WAAAjC,OAAAkC,eAAAgE,IAAAzG,KAAAsC,KAAMN,KAED4E,QAAU,IAAI9D,OAAOoC,MAAMyB,EAAK3E,KAAMC,EAAGC,EAAI,GAAIgB,GACtDyD,EAAKC,QAAQlE,OAAOC,MAAM,IAE1BgE,EAAK/D,IAAI+D,EAAKC,SAEdD,EAAKE,MAAQF,EAAK3E,KAAKY,IAAIiE,MAAMF,EAAKC,SACtCD,EAAKE,MAAMC,GAAG,CAAE5E,EAAGyE,EAAKC,QAAQ1E,EAAI,GAAI6E,MAAO,GAAK,KAEpDJ,EAAKE,MAAMG,WAAWpE,IAAI+D,EAAKM,OAA/BN,GAEAA,EAAKE,MAAMK,QAbsBP,aAFE7D,OAAO4C,2CAmB1CpD,KAAKqD,QAAQ,qECjIjB,IAAAwB,EAAAC,EAAA3H,EAAA,IACA4H,EAAAD,EAAA3H,EAAA,IACA6H,EAAAF,EAAA3H,EAAA,IACA8H,EAAAH,EAAA3H,EAAA,IACA+H,EAAAJ,EAAA3H,EAAA,IACAgI,EAAAL,EAAA3H,EAAA,IACAiI,EAAAN,EAAA3H,EAAA,6RAqBA,gBAlBE,SAAAkI,IAAc,IAAA5F,EAAA,mGAAAM,CAAAC,KAAAqF,IACZ5F,4KAAAQ,CAAAD,MAAAqF,EAAAnF,WAAAjC,OAAAkC,eAAAkF,IAAA3H,KAAAsC,KAAM,IAAK,IAAKQ,OAAO8E,KAAM,oBAGxBC,OAAL,iBAAiC,EAEjC9F,EAAK+F,MAAMlF,IAAI,OAAfuE,EAAAY,SACAhG,EAAK+F,MAAMlF,IAAI,UAAfyE,EAAAU,SACAhG,EAAK+F,MAAMlF,IAAI,OAAf0E,EAAAS,SACAhG,EAAK+F,MAAMlF,IAAI,YAAf2E,EAAAQ,SACAhG,EAAK+F,MAAMlF,IAAI,cAAf4E,EAAAO,SACAhG,EAAK+F,MAAMlF,IAAI,OAAf6E,EAAAM,SACAhG,EAAK+F,MAAMlF,IAAI,MAAf8E,EAAAK,SAEAhG,EAAK+F,MAAMZ,MAAM,QAdLnF,sTADGe,OAAO6E,4GCR1B,IAAAK,EAAAvI,EAAA,skCAEmBqD,OAAOmF,8CAKtB3F,KAAKN,KAAKkG,MAAMC,yBAA0B,EAE1C,IAAAH,EAAAnG,KAAS,CACPG,KAAMM,KAAKN,KACXC,EAAGK,KAAKN,KAAKoG,MAAMC,QACnBnG,EAAGI,KAAKN,KAAKoG,MAAME,QACnBnG,KAAM,aACNC,MAAO,CACLmG,KAAM,aACNC,KAAM,aAIVlG,KAAKwF,MAAMZ,MAAM,+tCCpBCpE,OAAOmF,+CAIzB3F,KAAKmG,KAAKC,MAAM,YAAiB,6BACjCpG,KAAKmG,KAAKC,MAAM,gBAAiB,iCAEjCpG,KAAKmG,KAAKE,YAAY,UAAc,0BAA2B,IAAK,IACpErG,KAAKmG,KAAKE,YAAY,aAAc,0BAA2B,GAAI,IACnErG,KAAKmG,KAAKE,YAAY,YAAc,6BAA8B,GAAI,IAEtErG,KAAKmG,KAAKC,MAAM,kBAAoB,mCACpCpG,KAAKmG,KAAKC,MAAM,mBAAoB,oCACpCpG,KAAKmG,KAAKC,MAAM,OAAoB,8BACpCpG,KAAKmG,KAAKC,MAAM,OAAoB,+BAGpCpG,KAAKmG,KAAKC,MAAM,QAAc,oBAC9BpG,KAAKmG,KAAKG,QAAQ,UAAY,oBAAqB,KAAM9F,OAAO+F,QAAQC,YACxExG,KAAKmG,KAAKG,QAAQ,WAAY,qBAAsB,KAAM9F,OAAO+F,QAAQC,YAIzExG,KAAKmG,KAAKE,YAAY,mBAAwB,mCAAwC,GAAI,IAC1FrG,KAAKmG,KAAKE,YAAY,uBAAwB,uCAAwC,GAAI,IAC1FrG,KAAKmG,KAAKE,YAAY,qBAAwB,qCAAwC,GAAI,IAC1FrG,KAAKmG,KAAKE,YAAY,eAAwB,+BAAwC,GAAI,IAC1FrG,KAAKmG,KAAKE,YAAY,kBAAwB,kCAAwC,GAAI,IAC1FrG,KAAKmG,KAAKE,YAAY,iBAAwB,iCAAwC,GAAI,IAC1FrG,KAAKmG,KAAKE,YAAY,iBAAwB,iCAAwC,GAAI,IAE1FrG,KAAKmG,KAAKE,YAAY,gBAAiB,gCAAiC,GAAI,IAC5ErG,KAAKmG,KAAKE,YAAY,eAAiB,+BAAgC,GAAI,IAC3ErG,KAAKmG,KAAKE,YAAY,eAAiB,wBAAyB,GAAI,IAEpErG,KAAKmG,KAAKC,MAAM,iBAAqB,kCACrCpG,KAAKmG,KAAKC,MAAM,oBAAqB,qCACrCpG,KAAKmG,KAAKC,MAAM,iBAAqB,kCACrCpG,KAAKmG,KAAKC,MAAM,oBAAqB,qCACrCpG,KAAKmG,KAAKC,MAAM,iBAAqB,kCAErCpG,KAAKmG,KAAKC,MAAM,oBAAqB,qCACrCpG,KAAKmG,KAAKC,MAAM,oBAAqB,qCACrCpG,KAAKmG,KAAKC,MAAM,mBAAqB,oCAGrCpG,KAAKmG,KAAKC,MAAM,uBAA4B,gCAE5CpG,KAAKmG,KAAKC,MAAM,0BAA4B,gCAC5CpG,KAAKmG,KAAKC,MAAM,uBAA4B,gCAC5CpG,KAAKmG,KAAKC,MAAM,0BAA4B,gCAC5CpG,KAAKmG,KAAKC,MAAM,wBAA4B,gCAC5CpG,KAAKmG,KAAKC,MAAM,wBAA4B,gCAC5CpG,KAAKmG,KAAKC,MAAM,uBAA4B,gCAC5CpG,KAAKmG,KAAKC,MAAM,uBAA4B,gCAC5CpG,KAAKmG,KAAKC,MAAM,uBAA4B,gCAC5CpG,KAAKmG,KAAKC,MAAM,yBAA4B,gCAC5CpG,KAAKmG,KAAKC,MAAM,wBAA4B,iCAC5CpG,KAAKmG,KAAKC,MAAM,uBAA4B,iCAE5CpG,KAAKmG,KAAKE,YAAY,qBAAuB,kCAAmC,GAAI,IACpFrG,KAAKmG,KAAKE,YAAY,kBAAuB,kCAAmC,GAAI,IACpFrG,KAAKmG,KAAKE,YAAY,qBAAuB,kCAAmC,GAAI,IACpFrG,KAAKmG,KAAKE,YAAY,mBAAuB,kCAAmC,GAAI,IACpFrG,KAAKmG,KAAKE,YAAY,mBAAuB,kCAAmC,GAAI,IACpFrG,KAAKmG,KAAKE,YAAY,kBAAuB,kCAAmC,GAAI,IACpFrG,KAAKmG,KAAKE,YAAY,kBAAuB,kCAAmC,GAAI,IACpFrG,KAAKmG,KAAKE,YAAY,kBAAuB,kCAAmC,GAAI,IACpFrG,KAAKmG,KAAKE,YAAY,oBAAuB,kCAAmC,GAAI,IACpFrG,KAAKmG,KAAKE,YAAY,mBAAuB,mCAAoC,GAAI,IACrFrG,KAAKmG,KAAKE,YAAY,kBAAuB,mCAAoC,GAAI,qCAIrFrG,KAAKwF,MAAMZ,MAAM,yJC1ErB,IAAAc,EAAAvI,EAAA,skCAEmBqD,OAAOmF,4CAGtB3F,KAAKyG,cAAgB,KAErBC,aAAaC,GAAG,wBAAyB3G,KAAK4G,oBAAoB7H,KAAKiB,wCAItDA,KAAKM,IAAI8F,MAAMpG,KAAKN,KAAKoG,MAAMC,QAAS/F,KAAKN,KAAKoG,MAAME,QAAS,aACvE5F,OAAOC,MAAM,IAGxB,IAAAqF,EAAAnG,KAAS,CACPG,KAAMM,KAAKN,KACXC,EAAGK,KAAKN,KAAKoG,MAAMC,QACnBnG,EAAGI,KAAKN,KAAKoG,MAAME,QAAU,IAC7BnG,KAAM,YACNC,MAAO,CACLmG,KAAM,aACNC,KAAM,UACNW,OAAQ,UACRC,gBAAiB,KAIrB,IAAApB,EAAAvE,WAAe,CACbzB,KAAMM,KAAKN,KACXC,EAAGK,KAAKN,KAAKoG,MAAMC,QACnBnG,EAAGI,KAAKN,KAAKoG,MAAME,QAAU,IAC7BpF,MAAO,UACPC,SAAUb,KAAK+G,eACfjG,gBAAiBd,KACjBe,UAAW,EACXC,SAAU,EACVC,UAAW,EACXC,QAAS,EACTI,MAAO,WACPxB,MAAO,CACLmG,KAAM,aACNC,KAAM,aAIVQ,aAAaM,KAAK,cAAehH,KAAK4G,oBAAoB7H,KAAKiB,kFAO/D0G,aAAaM,KAAK,eAClBhH,KAAKwF,MAAMZ,MAAM,yDAGC7C,GAKd/B,KAAKyG,eACPzG,KAAKyG,cAAcQ,UAGrBjH,KAAKyG,cAAgB,IAAAf,EAAA9D,UAAc,CACjClC,KAAMM,KAAKN,KACXqC,eAAgBA,EAChBlB,SAAUb,KAAKkH,eACfpG,gBAAiBd,KACjBL,EAAGK,KAAKN,KAAKoG,MAAMC,QAAU,IAC7BnG,EAAG,IACHE,MAAO,CACLmG,KAAM,aACNC,KAAM,UACNW,OAAQ,UACRC,gBAAiB,4CAKR/D,GACb2D,aAAaM,KAAK,eAElBhH,KAAKwF,MAAMZ,MAAM,eAAe,GAAM,EAAO7B,oJCrFjD,IAAAoE,EAAAhK,EAAA,GACAuI,EAAAvI,EAAA,skCAEwBqD,OAAOmF,4CAG3B3F,KAAKoH,OAAS,IAAIC,YAAYrH,uCAIbA,KAAKM,IAAI8F,MAAMpG,KAAKN,KAAKoG,MAAMC,QAAS/F,KAAKN,KAAKoG,MAAME,QAAS,aACvE5F,OAAOC,MAAM,IAExB,IAAAqF,EAAAnG,KAAS,CACPG,KAAMM,KAAKN,KACXC,EAAGK,KAAKN,KAAKoG,MAAMC,QACnBnG,EAAGI,KAAKN,KAAKoG,MAAME,QAAU,IAC7BnG,KAAM,aACNC,MAAO,CACLmG,KAAM,aACNC,KAAM,UACNW,OAAQ,UACRC,gBAAiB,KAMrB,IAAIQ,EAAc,IAAI9G,OAAOoC,MAAM5C,KAAKN,KAAM,EAAG,EAAG,mBAChD6H,EAAe,IAAI/G,OAAOoC,MAAM5C,KAAKN,KAAM,EAAG,EAAG,oBAErDM,KAAKoH,OAAOI,aAAa,CACvB7H,EAAGK,KAAKN,KAAKoG,MAAMC,QAAUuB,EAAYxE,MAAQ,EACjDlD,EAAGI,KAAKN,KAAKoG,MAAME,QAAUuB,EAAarD,OAAS,EACnDpB,MAAOwE,EAAYxE,MACnBoB,OAAQoD,EAAYpD,OACpBuD,iBAAkB,OAClBC,iBAAkB,OAClBC,QAAS,CAACL,EAAaC,KAGzB,IAAA7B,EAAAjF,OAAW,CACTf,KAAMM,KAAKN,KACXC,EAAGK,KAAKN,KAAKoG,MAAMC,QACnBnG,EAAGI,KAAKN,KAAKoG,MAAME,QAAU,IAC7BpF,MAAO,aACPC,SAAUb,KAAK4H,sBACf9G,gBAAiBd,KACjBe,UAAW,EACXC,SAAU,EACVC,UAAW,EACXC,QAAS,oDAKX,IAAI2G,EAAWV,EAAAW,eAAe9H,KAAKoH,OAAOW,mBAE1CrB,aAAaM,KAAK,cAAea,EAAU7H,KAAKgI,cAAcjJ,KAAKiB,6CAGvD+C,GACZ/C,KAAKwF,MAAMZ,MAAM,eAAe,GAAM,EAAO7B,oJC9DjD,IAAA2C,EAAAvI,EAAA,skCAE0BqD,OAAOmF,6CAEb,IAAX5C,EAAWvD,EAAXuD,QACL/C,KAAKiI,gBAAkB,KAEvBjI,KAAK+C,QAAUA,EAEf2D,aAAaC,GAAG,cAAe3G,KAAKkI,gBAAgBnJ,KAAKiB,OACzD0G,aAAaC,GAAG,cAAe3G,KAAKmI,WAAWpJ,KAAKiB,OAEpD0G,aAAaM,KAAK,qBAAsB,CAAEjE,QAAS/C,KAAK+C,2CAIvC/C,KAAKM,IAAI8F,MAAMpG,KAAKN,KAAKoG,MAAMC,QAAS/F,KAAKN,KAAKoG,MAAME,QAAS,aACvE5F,OAAOC,MAAM,IAExBL,KAAKoI,UAAY,IAAA1C,EAAAnG,KAAS,CACxBG,KAAMM,KAAKN,KACXC,EAAGK,KAAKN,KAAKoG,MAAMC,QACnBnG,EAAGI,KAAKN,KAAKoG,MAAME,QAAU,IAC7BnG,KAAM,GACNC,MAAO,CACLmG,KAAM,aACNC,KAAM,UACNW,OAAQ,UACRC,gBAAiB,KAIrB9G,KAAKqI,gBAAkB,IAAA3C,EAAAvE,WAAe,CACpCzB,KAAMM,KAAKN,KACXC,EAAGK,KAAKN,KAAKoG,MAAMC,QAAU,IAC7BnG,EAAGI,KAAKN,KAAKoG,MAAME,QAAU,IAC7BpF,MAAO,UACPC,SAAUb,KAAKsI,gBACfxH,gBAAiBd,KACjBe,UAAW,EACXC,SAAU,EACVC,UAAW,EACXC,QAAS,EACTI,MAAO,aACPxB,MAAO,CACLmG,KAAM,aACNC,KAAM,aAIVlG,KAAKqI,gBAAgBE,UAErB,IAAA7C,EAAAvE,WAAe,CACbzB,KAAMM,KAAKN,KACXC,EAAGK,KAAKN,KAAKoG,MAAMC,QAAU,IAC7BnG,EAAGI,KAAKN,KAAKoG,MAAME,QAAU,IAC7BpF,MAAO,UACPC,SAAUb,KAAKwI,gBACf1H,gBAAiBd,KACjBe,UAAW,EACXC,SAAU,EACVC,UAAW,EACXC,QAAS,EACTI,MAAO,aACPxB,MAAO,CACLmG,KAAM,aACNC,KAAM,wDAMsB,IAAhBuC,EAAgB/H,EAAhB+H,aACZ/E,EAAUzF,OAAOyK,OAAOD,EAAa/E,SAEzC1D,KAAKoI,UAAUvI,KAAf,GAAAoD,OAAyBwF,EAAa3K,KAAtC,MAAAmF,OAA+CS,EAAQiF,OAAvD,KAEAC,QAAQC,IAAInF,GACR1D,KAAKiI,iBACPjI,KAAKiI,gBAAgBhB,UAGvBjH,KAAKiI,gBAAkB,IAAAvC,EAAApC,YAAgB,CACrC5D,KAAMM,KAAKN,KACX+D,YAAagF,EAAahF,YAC1BC,QAASA,EACT/D,EAAGK,KAAKN,KAAKoG,MAAMC,QAAU,IAC7BnG,EAAGI,KAAKN,KAAKoG,MAAME,QAAU,GAC7BrC,YAAa,uBACbC,aAAc,kBACd9D,MAAO,CACLmG,KAAM,aACNC,KAAM,aAIPxC,EAAQiF,OAAS,EAClB3I,KAAKqI,gBAAgBS,SAErB9I,KAAKqI,gBAAgBE,oDAKvB7B,aAAaM,KAAK,sBAElBhH,KAAKwF,MAAMZ,MAAM,kDAIjB8B,aAAaM,KAAK,iDAGTtH,GACTM,KAAKwF,MAAMZ,MAAM,QAAQ,GAAM,EAAOlF,oJClH1C,IAAAqJ,EAAA5L,EAAA,GACAgK,EAAAhK,EAAA,GAEA6G,EAAAc,EAAA3H,EAAA,KACA6L,EAAAlE,EAAA3H,EAAA,KACA8L,EAAAnE,EAAA3H,EAAA,KACA+L,EAAApE,EAAA3H,EAAA,KACAgM,EAAArE,EAAA3H,EAAA,KACAiM,EAAAtE,EAAA3H,EAAA,2nCAEmBqD,OAAOmF,0CACnBjG,GACHM,KAAKqJ,YAAc3J,mCAInBM,KAAKsJ,YACLtJ,KAAKuJ,gBACLvJ,KAAKwJ,mBAELxJ,KAAKN,KAAK+J,KAAKC,OAAOC,KAAK,IAAM3J,KAAK4J,kBAAkB7K,KAAKiB,wCAI7DA,KAAKN,KAAKmK,QAAQC,OAAOC,QAAQ/J,KAAKgK,OAAQhK,KAAKiK,YACnDjK,KAAKN,KAAKmK,QAAQC,OAAOC,QAAQ/J,KAAKgK,OAAQhK,KAAKkK,SACnDlK,KAAKN,KAAKmK,QAAQC,OAAOC,QAAQ/J,KAAKgK,OAAQhK,KAAKmK,OAEnDnK,KAAKN,KAAKmK,QAAQC,OAAOM,QAAQpK,KAAKgK,OAAQhK,KAAKqK,OAAQrK,KAAKsK,gBAAiB,KAAMtK,MACvFA,KAAKN,KAAKmK,QAAQC,OAAOM,QAAQpK,KAAKgK,OAAQhK,KAAKuK,OAAQvK,KAAKwK,gBAAiB,KAAMxK,0CAIvFA,KAAKyK,IAAMzK,KAAKM,IAAIgG,QAAQtG,KAAKqJ,YAAYxB,UAE7C7H,KAAKyK,IAAIC,gBAATvD,EAAAwD,SAEA3K,KAAKiK,WAAajK,KAAKyK,IAAIG,YAATzD,EAAA0D,OAClB7K,KAAKiK,WAAWa,cAEhB9K,KAAKyK,IAAIM,aAAa/K,KAAKiK,WAAWe,MAAMC,WAAWC,gBAEvDlL,KAAKgK,OAAU,KACfhK,KAAKmL,MAAUnL,KAAKN,KAAKY,IAAI8K,QAC7BpL,KAAKmK,MAAUnK,KAAKN,KAAKY,IAAI8K,QAC7BpL,KAAKqK,OAAUrK,KAAKN,KAAKY,IAAI8K,QAC7BpL,KAAKuK,OAAUvK,KAAKN,KAAKY,IAAI8K,QAC7BpL,KAAKkK,QAAUlK,KAAKN,KAAKY,IAAI8K,QAE7BpL,KAAKN,KAAKmK,QAAQC,OAAOhB,OAAO9I,KAAKiK,oDAIrC,IADc,IAAAoB,EACKpN,OAAOyK,OAAO1I,KAAKqJ,YAAY3F,SAAlD4H,EAAA,EAAAA,EAAAD,EAAA1C,OAAA2C,IAA4D,CAAvD,IAAItB,OACHuB,EAAQ,CACV7L,KAAQM,KAAKN,KACbsD,GAAQgH,EAAOhH,GACfwI,MAAQxB,EAAOwB,MACfvH,KAAQ+F,EAAO/F,MAGb+F,EAAOhH,KAAO0D,aAAa1D,GAC7BhD,KAAKgK,OAAS,IAAAhG,EAAAyB,QAAW8F,GAEzBvL,KAAKkK,QAAQ5J,IAAI,IAAA0I,EAAAvD,QAAgB8F,gDAMrC7E,aAAaC,GAAG,cAAe3G,KAAKyL,aAAa1M,KAAKiB,OACtD0G,aAAaC,GAAG,aAAc3G,KAAK0L,YAAY3M,KAAKiB,OACpD0G,aAAaC,GAAG,YAAa3G,KAAK2L,WAAW5M,KAAKiB,OAClD0G,aAAaC,GAAG,gBAAiB3G,KAAK4L,eAAe7M,KAAKiB,OAC1D0G,aAAaC,GAAG,mBAAoB3G,KAAK6L,iBAAiB9M,KAAKiB,OAC/D0G,aAAaC,GAAG,aAAc3G,KAAK8L,YAAY/M,KAAKiB,OACpD0G,aAAaC,GAAG,oBAAqB3G,KAAK+L,mBAAmBhN,KAAKiB,+CAGpDgK,EAAQgC,GACtBtF,aAAaM,KAAK,gBAAiB,CAAEiF,SAAUD,EAAMhJ,KACrDgJ,EAAME,+CAGQlC,EAAQmC,GAClBnC,EAAOoC,QACT1F,aAAaM,KAAK,cAAe,CAAEqF,IAAKrC,EAAOsC,aAAcC,IAAKvC,EAAOwC,eACzExC,EAAOyC,uDAIuB,IAAnBC,EAAmBlN,EAAnBkN,UAAW/M,EAAQH,EAARG,EAAGC,EAAKJ,EAALI,EACvB+M,GAAQ,EAAA5D,EAAA6D,UAASF,EAAW1M,KAAKkK,SAChCyC,GAELA,EAAME,KAAK,CAAElN,EAAGA,EAAGC,EAAGA,gDAGJ,IAAAqC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAClB,QAAAC,EAAAC,EAAkBtC,KAAKkK,QAAQ4C,SAA/BxO,OAAAiE,cAAAN,GAAAI,EAAAC,EAAAE,QAAAC,MAAAR,GAAA,EAAyC,KAAhC0K,EAAgCtK,EAAA7D,MACnCmO,EAAMI,WAAa/M,KAAKN,KAAK+J,KAAKuD,IAAM,KAC1CL,EAAMM,WAAWC,QAHH,MAAAhK,GAAAhB,GAAA,EAAAC,EAAAe,EAAA,YAAAjB,GAAA,MAAAK,EAAAa,QAAAb,EAAAa,SAAA,WAAAjB,EAAA,MAAAC,0CAQc,IAArBgL,EAAqBzM,EAArByM,QAASd,EAAY3L,EAAZ2L,IAAKE,EAAO7L,EAAP6L,IACzBvM,KAAKmK,MAAM7J,IAAI,IAAA2I,EAAAxD,QAASzF,KAAKN,KAAMyN,EAASd,EAAKE,8CAGT,IAAzBY,EAAyB/L,EAAzB+L,QAASC,EAAgBhM,EAAhBgM,cAExB,EAAArE,EAAAsE,oBAAmBF,EAASnN,KAAKmK,OAFO,IAAAmD,GAAA,EAAAC,GAAA,EAAAC,OAAApL,EAAA,IAKxC,QAAAqL,EAAAC,EAAiBN,EAAjB9O,OAAAiE,cAAA+K,GAAAG,EAAAC,EAAAlL,QAAAC,MAAA6K,GAAA,EAA+B,KAAtBK,EAAsBF,EAAAjP,MAC7BwB,KAAKuK,OAAOjK,IAAI,IAAA6I,EAAA1D,QAAczF,KAAKN,KAAMiO,KANH,MAAAzK,GAAAqK,GAAA,EAAAC,EAAAtK,EAAA,YAAAoK,GAAA,MAAAI,EAAAvK,QAAAuK,EAAAvK,SAAA,WAAAoK,EAAA,MAAAC,GAAA,IAAAI,GAAA,EAAAC,GAAA,EAAAC,OAAA1L,EAAA,IAUxC,QAAA2L,EAAAC,EAAiBZ,EAAjB9O,OAAAiE,cAAAqL,GAAAG,EAAAC,EAAAxL,QAAAC,MAAAmL,GAAA,EAA+B,KAAtBD,EAAsBI,EAAAvP,MACxBmP,EAAKM,WAEVjO,KAAKyK,IAAIyD,QAAQlO,KAAKiK,WAAWe,MAAMC,WAAWkD,MAAOR,EAAKtB,IAAKsB,EAAKpB,IAAKvM,KAAKiK,aAb5C,MAAA/G,GAAA2K,GAAA,EAAAC,EAAA5K,EAAA,YAAA0K,GAAA,MAAAI,EAAA7K,QAAA6K,EAAA7K,SAAA,WAAA0K,EAAA,MAAAC,GAAA,IAAAM,GAAA,EAAAC,GAAA,EAAAC,OAAAlM,EAAA,IAiBxC,QAAAmM,EAAAC,EAAiBpB,EAAjB9O,OAAAiE,cAAA6L,GAAAG,EAAAC,EAAAhM,QAAAC,MAAA2L,GAAA,EAA+B,KAAtBT,EAAsBY,EAAA/P,MACxBmP,EAAKM,YACLN,EAAK3B,OAEVhM,KAAKqK,OAAO/J,IAAI,IAAA4I,EAAAzD,QAAUzF,KAAKN,KAAMiO,EAAK3B,UArBJ,MAAA9I,GAAAmL,GAAA,EAAAC,EAAApL,EAAA,YAAAkL,GAAA,MAAAI,EAAArL,QAAAqL,EAAArL,SAAA,WAAAkL,EAAA,MAAAC,gDAyBW,IAAlC5B,EAAkC7K,EAAlC6K,UAAWT,EAAuBpK,EAAvBoK,SAAUwC,EAAa5M,EAAb4M,WAClC/B,IAAc1M,KAAKgK,OAAOhH,IAC5BhD,KAAKgK,OAAO0E,UAAUD,IAGxB,EAAA1F,EAAAsE,oBAAmBpB,EAAUjM,KAAKqK,+CAGC,IAAvBqC,EAAuBnJ,EAAvBmJ,UAAWL,EAAY9I,EAAZ8I,IAAKE,EAAOhJ,EAAPgJ,IAC5BvM,KAAKmL,MAAM7K,IAAI,IAAA8I,EAAA3D,QAASzF,KAAKN,KAAM2M,EAAKE,KAExC,EAAAxD,EAAAsE,oBAAmBX,EAAW1M,KAAKkK,6CAGzByE,GACVjI,aAAaM,KAAK,cAElBhH,KAAKwF,MAAMZ,MAAM,OAAO,GAAM,EAAO+J,iDAGL,IAAbjC,EAAatI,EAAbsI,WACnB,EAAA3D,EAAAsE,oBAAmBX,EAAW1M,KAAKkK,SAE/BlK,KAAKkK,QAAQ4C,SAASnE,QAAU,GAEpC3I,KAAK0L,qLChKF,IAAMkB,EAAW,SAAS5J,EAAI4L,GAAU,IAAA3M,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAC7C,QAAAC,EAAAC,EAAmBsM,EAAS9B,SAA5BxO,OAAAiE,cAAAN,GAAAI,EAAAC,EAAAE,QAAAC,MAAAR,GAAA,EAAsC,KAA7B4M,EAA6BxM,EAAA7D,MACpC,GAAIqQ,EAAO7L,KAAOA,EAElB,OAAO6L,GAJoC,MAAA3L,GAAAhB,GAAA,EAAAC,EAAAe,EAAA,YAAAjB,GAAA,MAAAK,EAAAa,QAAAb,EAAAa,SAAA,WAAAjB,EAAA,MAAAC,GAM7C,OAAO,wCAGyB,SAASa,EAAI4L,GAC7C,IAAIC,EAASjC,EAAS5J,EAAI4L,GACrBC,GAELA,EAAO5H,2GCbT,MAAAE,EAAAhK,EAAA,GAKA2R,KAAA3R,EAAA,iCACAuI,EAAAvI,EAAA,kZAEqB4R,cAEnB,SAAAA,EAAAvP,GAAuC,IAAAC,EAAzBC,EAAyBF,EAAzBE,KAAMsD,EAAmBxD,EAAnBwD,GAAIwI,EAAehM,EAAfgM,MAAOvH,EAAQzE,EAARyE,KAAQ,mGAAAlE,CAAAC,KAAA+O,IACrCtP,4KAAAQ,CAAAD,MAAA+O,EAAA7O,WAAAjC,OAAAkC,eAAA4O,IAAArR,KAAAsC,KAAMN,EAAM8L,EAAM7L,EAAG6L,EAAM5L,EAAG,aAAeqE,KAExCvE,KAAOA,EACZD,EAAKuD,GAAKA,EAEVvD,EAAKuP,aAAe,CAAErP,EAAG6L,EAAM7L,EAAGC,EAAG4L,EAAM5L,GAE3CH,EAAKwP,MAAL9H,EAAA+H,cACAzP,EAAK0P,MAALhI,EAAAiI,cACA3P,EAAK4P,MAALlI,EAAAmI,cACA7P,EAAK8P,cAAgB,EAErB9P,EAAKC,KAAKY,IAAIC,SAAdd,GACAA,EAAKC,KAAKmK,QAAQC,OAAOhB,OAAzBrJ,GACAA,EAAK+P,KAAKC,QAAQ,GAAI,GAAI,EAAG,GAE7B/P,EAAK+J,KAAKC,OAAOC,KAAjBxC,EAAAuI,KAA6BjQ,EAAKkQ,oBAAoB5Q,KAAzBU,IAE7BA,EAAKwN,WAAW3M,IAAI,KAAM,CAAC,EAAG,GAAI,IAAK,IAAI,GAC3Cb,EAAKwN,WAAW3M,IAAI,OAAQ,CAAC,EAAG,EAAG,GAAI,IAAI,GAC3Cb,EAAKwN,WAAW3M,IAAI,QAAS,CAAC,EAAG,EAAG,GAAI,IAAI,GAC5Cb,EAAKwN,WAAW3M,IAAI,OAAQ,CAAC,EAAG,EAAG,GAAI,IAAI,GAE3Cb,EAAKmQ,KAAO,IAAAd,EAAArJ,QAAS,CAAE/F,KAAMD,EAAKC,KAAMsK,WAExCvK,EAAKoQ,iBACLpQ,EAAKqQ,WAAW7L,GA3BqBxE,gUAFLe,OAAOuP,+CAiCnC/P,KAAKoM,QACPpM,KAAKgQ,cACLhQ,KAAKiQ,wDAQPjQ,KAAKkQ,MAAWlQ,KAAKN,KAAKgC,MAAMyO,SAASC,OAAO5P,OAAO6P,SAASC,IAChEtQ,KAAKuQ,QAAWvQ,KAAKN,KAAKgC,MAAMyO,SAASC,OAAO5P,OAAO6P,SAASG,MAChExQ,KAAKyQ,QAAWzQ,KAAKN,KAAKgC,MAAMyO,SAASC,OAAO5P,OAAO6P,SAASK,MAChE1Q,KAAK2Q,SAAW3Q,KAAKN,KAAKgC,MAAMyO,SAASC,OAAO5P,OAAO6P,SAASO,OAChE5Q,KAAK6Q,SAAW7Q,KAAKN,KAAKgC,MAAMyO,SAASC,OAAO5P,OAAO6P,SAASS,gDAIhE9Q,KAAKwP,KAAKuB,SAASC,IAAI,GACvB,IAAIC,EAAkB,GAElBjR,KAAKyQ,QAAQS,QACflR,KAAKwP,KAAKuB,SAASpR,GAAKK,KAAKqP,MAC7B4B,EAAgBE,KAAK,SACZnR,KAAK2Q,SAASO,SACvBlR,KAAKwP,KAAKuB,SAASpR,EAAIK,KAAKqP,MAC5B4B,EAAgBE,KAAK,UAGnBnR,KAAKkQ,MAAMgB,QACblR,KAAKwP,KAAKuB,SAASnR,GAAKI,KAAKqP,MAC7B4B,EAAgBE,KAAK,OACZnR,KAAKuQ,QAAQW,SACtBlR,KAAKwP,KAAKuB,SAASnR,EAAII,KAAKqP,MAC5B4B,EAAgBE,KAAK,SAGvB,IAAIC,EAAmBH,EAAgB,GACnCG,EACFpR,KAAKiN,WAAWoE,KAAKD,GAIvBpR,KAAKiN,WAAWC,6CAIhB,GAAIlN,KAAKN,KAAKgC,MAAMyO,SAASe,OAAO1Q,OAAO6P,SAASS,UAAW,CAC7D,IAAI9D,EAAMhN,KAAKN,KAAK+J,KAAKuD,IAErBA,EAAMhN,KAAKuP,gBACbvP,KAAKuP,cAAgBvC,EAAMhN,KAAKiP,MAEhCvI,aAAaM,KAAK,cAAe,CAAEqF,IAAKrM,KAAKsM,aAAcC,IAAKvM,KAAKwM,sDAMzE,OAAO8E,KAAKC,MAAMvR,KAAKwP,KAAKgC,SAAS7R,EAAnBwH,EAAAsK,gDAIlB,OAAOH,KAAKC,MAAMvR,KAAKwP,KAAKgC,SAAS5R,EAAnBuH,EAAAsK,yDAIlB,IAAIC,EAAc,CAAE/R,EAAGK,KAAKwR,SAAS7R,EAAGC,EAAGI,KAAKwR,SAAS5R,GAErDI,KAAKgP,aAAarP,IAAM+R,EAAY/R,GAAKK,KAAKgP,aAAapP,IAAM8R,EAAY9R,IAC/E8G,aAAaM,KAAK,yBAA0B0K,GAC5C1R,KAAKgP,aAAe0C,yCAKtB1R,KAAK4P,KAAK+B,eACV3R,KAAKkM,yCAGIuC,GACJA,aAAwBzO,KAAK4R,gBAC7BnD,aAAwBzO,KAAK6R,gBAC7BpD,aAAwBzO,KAAK8R,wDAIlC,IAAIlR,EAAQ,oBAERZ,KAAKqP,MAALlI,EAAA4K,YACF/R,KAAKqP,MAAQrP,KAAKqP,MAALlI,EAAA6K,WACbhS,KAAK4P,KAAKqC,mBACVrR,EAAQ,kBAGV,IAAA8E,EAAAvB,kBAAsB,CAAEzE,KAAMM,KAAKN,KAAMkB,MAAOA,EAAOjB,EAAGK,KAAKwR,SAAS7R,EAAGC,EAAGI,KAAKwR,SAAS5R,4CAI5F,IAAIgB,EAAQ,oBAERZ,KAAKiP,MAAL9H,EAAA+K,YACFlS,KAAKiP,OAAL9H,EAAAgL,WACAnS,KAAK4P,KAAKqC,mBACVrR,EAAQ,kBAGV,IAAA8E,EAAAvB,kBAAsB,CAAEzE,KAAMM,KAAKN,KAAMkB,MAAOA,EAAOjB,EAAGK,KAAKwR,SAAS7R,EAAGC,EAAGI,KAAKwR,SAAS5R,4CAM5FI,KAAKmP,OAALhI,EAAAiL,WACApS,KAAK4P,KAAKqC,mBAEV,IAAAvM,EAAAvB,kBAAsB,CAAEzE,KAAMM,KAAKN,KAAMkB,MAL7B,iBAK2CjB,EAAGK,KAAKwR,SAAS7R,EAAGC,EAAGI,KAAKwR,SAAS5R,uCAGnF9B,GACT,IAAIuU,EAAa,IAAA3M,EAAAnG,KAAS,CACxBG,KAAMM,KAAKN,KACXC,EAAGwH,EAAAsK,UAAY,EACf7R,GAAI,GACJC,iBAAgB/B,EAAhB,MACAgC,MAAO,CACLmG,KAAM,aACNC,KAAM,UACJW,OAAQ,UACRC,gBAAiB,KAIvB9G,KAAKuB,SAAS8Q,8TC9KGC,aAEnB,SAAAA,EAAA9S,GAA8B,IAAhBE,EAAgBF,EAAhBE,KAAMsK,EAAUxK,EAAVwK,oGAAUjK,CAAAC,KAAAsS,GAC5BtS,KAAKN,KAAOA,EACZM,KAAKgK,OAASA,EAEdhK,KAAKF,MAAW,CAAEmG,KAAM,aAAcC,KAAM,UAAWqM,MAAO,QAC9DvS,KAAKwS,SAAW,CAAEvM,KAAM,aAAcC,KAAM,UAAWqM,MAAO,UAE9D,IAAIE,EAAa,IAAIjS,OAAOoC,MAAM5C,KAAKN,KAAM,EAAG,EAAG,qBACnDM,KAAK0S,UAAY,IAAIlS,OAAOjB,KAAKS,KAAKN,KAAM,GAAI,EAAGM,KAAK2S,aAAc3S,KAAKF,OAC3E2S,EAAUlR,SAASvB,KAAK0S,WACxB1S,KAAKN,KAAKY,IAAIC,SAASkS,GAEvB,IAAIG,EAAa,IAAIpS,OAAOoC,MAAM5C,KAAKN,KAAM,IAAK,EAAG,qBACrDM,KAAK6S,UAAY,IAAIrS,OAAOjB,KAAKS,KAAKN,KAAM,GAAI,EAAGM,KAAK8S,aAAc9S,KAAKF,OAC3E8S,EAAUrR,SAASvB,KAAK6S,WACxB7S,KAAKN,KAAKY,IAAIC,SAASqS,GAEvB,IAAIG,EAAa,IAAIvS,OAAOoC,MAAM5C,KAAKN,KAAM,IAAK,EAAG,oBACrDM,KAAKgT,UAAY,IAAIxS,OAAOjB,KAAKS,KAAKN,KAAM,GAAI,EAAGM,KAAKiT,aAAcjT,KAAKF,OAC3EiT,EAAUxR,SAASvB,KAAKgT,WACxBhT,KAAKN,KAAKY,IAAIC,SAASwS,GAEvB/S,KAAKkT,SAAWlT,KAAKN,KAAKY,IAAIT,KAAKG,KAAKN,KAAKoG,MAAMC,QAAS/F,KAAKN,KAAKoG,MAAM5B,OAAS,GAAI,cAAelE,KAAKwS,UAC7GxS,KAAKkT,SAAS9S,OAAO4Q,IAAI,IACzBhR,KAAKkT,SAASC,SAAU,oEAIxBnT,KAAK0S,UAAU7S,KAAOG,KAAK2S,aAC3B3S,KAAK6S,UAAUhT,KAAOG,KAAK8S,aAC3B9S,KAAKgT,UAAUnT,KAAOG,KAAKiT,oDAI3BjT,KAAKkT,SAASC,SAAU,uCAIxB,OAAOnT,KAAKgK,OAAOqF,2CAInB,WAAApM,OAAYjD,KAAKgK,OAAOmF,4CAIxB,SAAAlM,OAAUjD,KAAKgK,OAAOiF,MAAQ,IAA9B,0JChDJ,IAAA9H,EAAAhK,EAAA,GACAuI,EAAAvI,EAAA,kZAEqBiW,cAEnB,SAAAA,EAAA5T,GAAuC,IAAAC,EAAzBC,EAAyBF,EAAzBE,KAAMsD,EAAmBxD,EAAnBwD,GAAIwI,EAAehM,EAAfgM,MAAOvH,EAAQzE,EAARyE,KAAQ,mGAAAlE,CAAAC,KAAAoT,IACrC3T,4KAAAQ,CAAAD,MAAAoT,EAAAlT,WAAAjC,OAAAkC,eAAAiT,IAAA1V,KAAAsC,KAAMN,EAAM8L,EAAM7L,EAAG6L,EAAM5L,EAAG,aAAeqE,KAExCvE,KAAOA,EACZD,EAAKuD,GAAKA,EAEVvD,EAAK4T,gBAAkB7H,EACvB/L,EAAKsN,WAAa,EAElBtN,EAAKC,KAAKmK,QAAQC,OAAOhB,OAAzBrJ,GACAA,EAAK+P,KAAKC,QAAQ,GAAI,GAAI,EAAG,GAC7BhQ,EAAK+P,KAAK8D,WAAY,EAEtB7T,EAAKwN,WAAW3M,IAAI,KAAM,CAAC,EAAG,GAAI,IAAK,IAAI,GAC3Cb,EAAKwN,WAAW3M,IAAI,OAAQ,CAAC,EAAG,EAAG,GAAI,IAAI,GAC3Cb,EAAKwN,WAAW3M,IAAI,QAAS,CAAC,EAAG,EAAG,GAAI,IAAI,GAC5Cb,EAAKwN,WAAW3M,IAAI,OAAQ,CAAC,EAAG,EAAG,GAAI,IAAI,GAE3Cb,EAAKqQ,WAAW7L,GAlBqBxE,gUAFAe,OAAOuP,6EA2BzC2B,GACH1R,KAAK+M,WAAa/M,KAAKN,KAAK+J,KAAKuD,IAEjChN,KAAKuT,YAAY7B,GAEjB1R,KAAKN,KAAKY,IAAIiE,MAAMvE,MAAMwE,GAAGkN,EAA7BvK,EAAAuI,KAAgDlP,OAAOgT,OAAOC,OAAOC,MAAM,uCAGjEhC,GACV,IAAIiC,EAAO,OACPC,EAAQlC,EAAY/R,EAAIK,KAAKqT,gBAAgB1T,EAC7CkU,EAAQnC,EAAY9R,EAAII,KAAKqT,gBAAgBzT,EAE7CgU,EAAQ,EACVD,EAAO,OACEC,EAAQ,EACjBD,EAAO,QACEE,EAAQ,EACjBF,EAAO,KACEE,EAAQ,IACjBF,EAAO,QAGT3T,KAAKiN,WAAWoE,KAAKsC,GACrB3T,KAAKqT,gBAAkB3B,qCAGd5T,GACT,IAAIuU,EAAa,IAAA3M,EAAAnG,KAAS,CACxBG,KAAMM,KAAKN,KACXC,EAAGwH,EAAAsK,UAAY,EACf7R,GAAI,GACJC,KAAM/B,EACNgC,MAAO,CACLmG,KAAM,aACNC,KAAM,UACJW,OAAQ,UACRC,gBAAiB,KAIvB9G,KAAKuB,SAAS8Q,oJCvElB,IAAAlL,EAAAhK,EAAA,kZAEqB2W,cAEnB,SAAAA,EAAYpU,EAAMsD,EAAIqJ,EAAKE,GAAK,IAAA9M,+FAAAM,CAAAC,KAAA8T,GAC9B,IAAIC,EAAa1H,cAAmBlF,EAAAsK,UAAY,EAC5CuC,EAAazH,cAAmBpF,EAAAsK,UAAY,EAFlB,OAI9BhS,4KAAAQ,CAAAD,MAAA8T,EAAA5T,WAAAjC,OAAAkC,eAAA2T,IAAApW,KAAAsC,KAAMN,EAAMqU,EAAWC,EAAW,kBAC7BC,MAAM5T,MAAM,IACjBZ,EAAKW,OAAOC,MAAM,IAElBZ,EAAKC,KAAOA,EACZD,EAAKuD,GAAKA,EAEVvD,EAAKC,KAAKmK,QAAQC,OAAOhB,OAAzBrJ,GAEAA,EAAKC,KAAKY,IAAIiE,MAAM9E,EAAKwU,OAAOzP,GAAG,CAAE7E,EAAG,IAAKC,EAAG,KAAhDuH,EAAA+M,eAAuE1T,OAAOgT,OAAOC,OAAOC,MAAM,GAElGjU,EAAK+P,KAAK8D,WAAY,EAEtB7T,EAAKwN,WAAW3M,IAAI,OAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,IAAK,GAAG,GAClEb,EAAKwN,WAAWoE,KAAK,QAlBS5R,gUAFAe,OAAOuP,iMCFzC,IAAA5I,EAAAhK,EAAA,4OAEqBgX,cAEnB,SAAAA,EAAYzU,EAAMsM,GAAO,IAAAvM,EAEnBgP,EAFmB,mGAAA1O,CAAAC,KAAAmU,GAGnBnI,EAAMyC,aAANtH,EAAAiN,QACF3F,EAAa,GAEXzC,EAAMyC,aAANtH,EAAAkN,QACF5F,EAAc,GAEZzC,EAAMyC,aAANtH,EAAAmN,QACF7F,EAAa,IAGfhP,4KAAAQ,CAAAD,MAAAmU,EAAAjU,WAAAjC,OAAAkC,eAAAgU,IAAAzW,KAAAsC,KAAMN,EAAOsM,EAAMK,IAANlF,EAAAsK,UAAyBzF,EAAMO,IAANpF,EAAAsK,UAAwB,gBAAiBhD,KAE1EzL,GAAKgJ,EAAMhJ,GAEhBvD,EAAKC,KAAKmK,QAAQC,OAAOhB,OAAzBrJ,GAjBuBA,sTAFQe,OAAOuP,yHCF1C,IAAA5I,EAAAhK,EAAA,4OAEqBoX,cAEnB,SAAAA,EAAY7U,EAAMiO,GAAM,IAAAlO,EAAA,mGAAAM,CAAAC,KAAAuU,IACtB9U,4KAAAQ,CAAAD,MAAAuU,EAAArU,WAAAjC,OAAAkC,eAAAoU,IAAA7W,KAAAsC,KAAMN,EAAOiO,EAAKtB,IAALlF,EAAAsK,UAAwB9D,EAAKpB,IAALpF,EAAAsK,UAAuB9D,EAAK6G,KAAM,KAElE9U,KAAOA,EAEZD,EAAKwN,WAAW3M,IAAI,QAAS,CAAC,EAAG,EAAG,EAAG,EAAG,IAG1Cb,EAAK4R,KAAK,QAAS,IAAI,GAAO,GAE9B5R,EAAKC,KAAKmK,QAAQC,OAAOhB,OAAzBrJ,GAVsBA,sTAFae,OAAOuP,yHCF9C,IAAA5I,EAAAhK,EAAA,4OAEqBsX,cAEnB,SAAAA,EAAY/U,EAAM2M,EAAKE,GAAK,mGAAAxM,CAAAC,KAAAyU,6KAAAxU,CAAAD,MAAAyU,EAAAvU,WAAAjC,OAAAkC,eAAAsU,IAAA/W,KAAAsC,KACpBN,EAAO2M,cAAmBE,cAAkB,qUAHpB/L,OAAOuP,yHCFzC,IAAArK,EAAAvI,EAAA,skCAEkBqD,OAAOmF,0CAElBgJ,GACH3O,KAAKiE,KAAO0K,mCAIZ,IAAAjJ,EAAAnG,KAAS,CACPG,KAAMM,KAAKN,KACXC,EAAGK,KAAKN,KAAKoG,MAAMC,QACnBnG,EAAGI,KAAKN,KAAKoG,MAAME,QACnBnG,KAAMG,KAAK0U,aACX5U,MAAO,CACLmG,KAAM,aACNC,KAAM,8CAMNlG,KAAKN,KAAKgC,MAAMyO,SAASe,OAAO1Q,OAAO6P,SAASsE,QAClD3U,KAAK4U,sDAKP5U,KAAKwF,MAAMZ,MAAM,6CAIjB,OAAI5E,KAAKiE,KACP,YAAAhB,OAAmBjD,KAAKiE,KAAxB,8CAGK","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","export const AVAILABLE_MAPS = ['hot_map', 'cold_map']\r\nexport const TILESET = 'tiles';\r\nexport const LAYER   = 'Blocks';\r\n\r\nexport const TILE_SIZE = 35;\r\nexport const EXPLOSION_TIME = 2000;\r\nexport const PING = 100;\r\n\r\nexport const SPEED = 0\r\nexport const POWER = 1\r\nexport const DELAY = 2\r\n\r\nexport const INITIAL_SPEED = 150\r\nexport const STEP_SPEED = 50\r\nexport const MAX_SPEED = 350\r\nexport const INITIAL_DELAY = 2000\r\nexport const STEP_DELAY = 500\r\nexport const MIN_DELAY = 500\r\nexport const INITIAL_POWER = 1\r\nexport const STEP_POWER = 1\r\n","export class Text extends Phaser.Text {\r\n\r\n  constructor({ game, x, y, text, style }) {\r\n    super(game, x, y, text, style);\r\n    this.anchor.setTo(0.5);\r\n\r\n    this.game.add.existing(this);\r\n  }\r\n\r\n}\r\n\r\nexport class Button extends Phaser.Button {\r\n\r\n  constructor({ game, x, y, asset, callback, callbackContext, overFrame, outFrame, downFrame, upFrame }) {\r\n    super(game, x, y, asset, callback, callbackContext, overFrame, outFrame, downFrame, upFrame);\r\n    this.anchor.setTo(0.5);\r\n\r\n    this.game.add.existing(this);\r\n  }\r\n\r\n}\r\n\r\nexport class TextButton extends Phaser.Button {\r\n\r\n  constructor({ game, x, y, asset, callback, callbackContext, overFrame, outFrame, downFrame, upFrame, label, style }) {\r\n    super(game, x, y, asset, callback, callbackContext, overFrame, outFrame, downFrame, upFrame);\r\n    this.anchor.setTo(0.5);\r\n\r\n    this.text = new Phaser.Text(this.game, 0, 0, label, style);\r\n    this.text.anchor.setTo(0.5);\r\n\r\n    this.addChild(this.text);\r\n\r\n    this.game.add.existing(this);\r\n  }\r\n\r\n  disable() {\r\n    this.setFrames(3, 3);\r\n    this.inputEnabled = false;\r\n    this.input.useHandCursor = false;\r\n  }\r\n\r\n  enable() {\r\n    this.setFrames(1, 0, 2);\r\n    this.inputEnabled = true;\r\n    this.input.useHandCursor = true;\r\n  }\r\n\r\n}\r\n\r\nexport class GameSlots extends Phaser.Group {\r\n\r\n  constructor({ game, availableGames, callback, callbackContext, x, y, style }) {\r\n    super(game);\r\n\r\n    let game_slot_asset = 'slot_backdrop'\r\n    let game_enter_asset = 'list_icon'\r\n\r\n    let yOffset = y;\r\n\r\n    for (let availableGame of availableGames) {\r\n      let gameBox = new Phaser.Image(this.game, x, yOffset, game_slot_asset)\r\n      let button = new Phaser.Button(this.game, gameBox.width - 100, 12, game_enter_asset, callback.bind(callbackContext, { game_id: availableGame.id }), null, 1, 0, 2, 1);\r\n      let text = new Phaser.Text(this.game, 30, 25, `Join Game: ${availableGame.name}`, style);\r\n\r\n      gameBox.addChild(button);\r\n      gameBox.addChild(text);\r\n\r\n      this.add(gameBox);\r\n\r\n      yOffset += 105;\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    this.callAll('kill') // destroy\r\n  }\r\n}\r\n\r\nexport class PlayerSlots extends Phaser.Group {\r\n\r\n  constructor({ game, max_players, players, x, y, asset_empty, asset_player, style }) {\r\n    super(game);\r\n\r\n    let xOffset = x;\r\n\r\n    for (let i = 0; i < max_players; i++) {\r\n      let slotBox\r\n      let slotName\r\n      let _player = players[i]\r\n\r\n      if (_player) {\r\n        slotBox = new Phaser.Image(this.game, xOffset, y, asset_player+_player.skin)\r\n        slotName = new Phaser.Text(this.game, slotBox.width/2, slotBox.height + 15, _player.skin, style);\r\n        slotName.anchor.setTo(0.5);\r\n        slotBox.addChild(slotName);\r\n      } else {\r\n        slotBox = new Phaser.Image(this.game, xOffset, y, asset_empty)\r\n      }\r\n\r\n      this.add(slotBox);\r\n      xOffset += 170;\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    this.callAll('kill')\r\n  }\r\n}\r\n\r\nexport class SpoilNotification extends Phaser.Group {\r\n\r\n  constructor({ game, asset, x, y }) {\r\n    super(game)\r\n\r\n    this.picture = new Phaser.Image(this.game, x, y - 20, asset);\r\n    this.picture.anchor.setTo(0.5);\r\n\r\n    this.add(this.picture);\r\n\r\n    this.tween = this.game.add.tween(this.picture);\r\n    this.tween.to({ y: this.picture.y - 25, alpha: 0 }, 600);\r\n\r\n    this.tween.onComplete.add(this.finish, this);\r\n\r\n    this.tween.start()\r\n  }\r\n\r\n  finish() {\r\n    this.callAll('kill')\r\n  }\r\n}\r\n","import Boot from './states/boot';\r\nimport Preload from './states/preload';\r\nimport Menu from './states/menu';\r\nimport SelectMap from './states/select_map';\r\nimport PendingGame from './states/pending_game';\r\nimport Play from './states/play';\r\nimport Win from './states/win';\r\n\r\nclass Game extends Phaser.Game {\r\n  constructor() {\r\n    super(980, 630, Phaser.AUTO, 'game-container');\r\n\r\n    // Tell Phaser to use setTimeOut even if RAF(request animation frame) is available.\r\n    this.config['forceSetTimeOut'] = true\r\n\r\n    this.state.add('Boot',         Boot);\r\n    this.state.add('Preload',      Preload);\r\n    this.state.add('Menu',         Menu);\r\n    this.state.add('SelectMap',    SelectMap);\r\n    this.state.add('PendingGame',  PendingGame);\r\n    this.state.add('Play',         Play);\r\n    this.state.add('Win',          Win);\r\n\r\n    this.state.start('Boot');\r\n  }\r\n}\r\n\r\nnew Game();\r\n","import { Text } from '../helpers/elements';\r\n\r\nclass Boot extends Phaser.State {\r\n\r\n  create() {\r\n    // Make the game keep reacting to messages from the server even when the game window doesn’t have focus.\r\n    // The game pauses when I open a new tab in the same window, but does not pause when I focus on another application\r\n    this.game.stage.disableVisibilityChange = true;\r\n\r\n    new Text({\r\n      game: this.game,\r\n      x: this.game.world.centerX,\r\n      y: this.game.world.centerY,\r\n      text: 'Loading...',\r\n      style: {\r\n        font: '30px Areal',\r\n        fill: '#FFFFFF'\r\n      }\r\n    })\r\n\r\n    this.state.start('Preload');\r\n  }\r\n\r\n}\r\n\r\nexport default Boot;\r\n","class Preload extends Phaser.State {\r\n\r\n  preload() {\r\n    // Menu:\r\n    this.load.image('main_menu',     'images/menu/main_menu.png');\r\n    this.load.image('slot_backdrop', 'images/menu/slot_backdrop.png');\r\n\r\n    this.load.spritesheet('buttons',    'images/menu/buttons.png', 200, 75);\r\n    this.load.spritesheet('check_icon', 'images/menu/accepts.png', 75, 75);\r\n    this.load.spritesheet('list_icon',  'images/menu/game_enter.png', 75, 75);\r\n\r\n    this.load.image('hot_map_preview',  'images/menu/hot_map_preview.png');\r\n    this.load.image('cold_map_preview', 'images/menu/cold_map_preview.png');\r\n    this.load.image('prev',             'images/menu/left_arrow.png');\r\n    this.load.image('next',             'images/menu/right_arrow.png');\r\n\r\n    // Map:\r\n    this.load.image('tiles',      'maps/tileset.png');\r\n    this.load.tilemap('hot_map',  'maps/hot_map.json', null, Phaser.Tilemap.TILED_JSON);\r\n    this.load.tilemap('cold_map', 'maps/cold_map.json', null, Phaser.Tilemap.TILED_JSON);\r\n\r\n\r\n    // Game:\r\n    this.load.spritesheet('explosion_center',     'images/game/explosion_center.png',     35, 35);\r\n    this.load.spritesheet('explosion_horizontal', 'images/game/explosion_horizontal.png', 35, 35);\r\n    this.load.spritesheet('explosion_vertical',   'images/game/explosion_vertical.png',   35, 35);\r\n    this.load.spritesheet('explosion_up',         'images/game/explosion_up.png',         35, 35);\r\n    this.load.spritesheet('explosion_right',      'images/game/explosion_right.png',      35, 35);\r\n    this.load.spritesheet('explosion_down',       'images/game/explosion_down.png',       35, 35);\r\n    this.load.spritesheet('explosion_left',       'images/game/explosion_left.png',       35, 35);\r\n\r\n    this.load.spritesheet('spoil_tileset', 'images/game/spoil_tileset.png', 35, 35);\r\n    this.load.spritesheet('bone_tileset',  'images/game/bone_tileset.png', 35, 35);\r\n    this.load.spritesheet('bomb_tileset',  'images/game/bombs.png', 35, 35);\r\n\r\n    this.load.image('speed_up_bonus',    'images/game/speed_up_bonus.png');\r\n    this.load.image('speed_up_no_bonus', 'images/game/speed_up_no_bonus.png');\r\n    this.load.image('delay_up_bonus',    'images/game/delay_up_bonus.png');\r\n    this.load.image('delay_up_no_bonus', 'images/game/delay_up_no_bonus.png');\r\n    this.load.image('power_up_bonus',    'images/game/power_up_bonus.png');\r\n\r\n    this.load.image('placeholder_power', 'images/game/placeholder_power.png');\r\n    this.load.image('placeholder_speed', 'images/game/placeholder_speed.png');\r\n    this.load.image('placeholder_time',  'images/game/placeholder_time.png');\r\n\r\n    // Skins:\r\n    this.load.image('bomberman_head_blank',     'images/game/chars/0-face.png');\r\n\r\n    this.load.image('bomberman_head_Theodora',  'images/game/chars/1-face.png');\r\n    this.load.image('bomberman_head_Ringo',     'images/game/chars/2-face.png');\r\n    this.load.image('bomberman_head_Jeniffer',  'images/game/chars/3-face.png');\r\n    this.load.image('bomberman_head_Godard',    'images/game/chars/4-face.png');\r\n    this.load.image('bomberman_head_Biarid',    'images/game/chars/5-face.png');\r\n    this.load.image('bomberman_head_Solia',     'images/game/chars/6-face.png');\r\n    this.load.image('bomberman_head_Kedan',     'images/game/chars/7-face.png');\r\n    this.load.image('bomberman_head_Nigob',     'images/game/chars/8-face.png');\r\n    this.load.image('bomberman_head_Baradir',   'images/game/chars/9-face.png');\r\n    this.load.image('bomberman_head_Raviel',    'images/game/chars/10-face.png');\r\n    this.load.image('bomberman_head_Valpo',     'images/game/chars/11-face.png');\r\n\r\n    this.load.spritesheet('bomberman_Theodora',  'images/game/chars/1-preview.png', 32, 32);\r\n    this.load.spritesheet('bomberman_Ringo',     'images/game/chars/2-preview.png', 32, 32);\r\n    this.load.spritesheet('bomberman_Jeniffer',  'images/game/chars/3-preview.png', 32, 32);\r\n    this.load.spritesheet('bomberman_Godard',    'images/game/chars/4-preview.png', 32, 32);\r\n    this.load.spritesheet('bomberman_Biarid',    'images/game/chars/5-preview.png', 32, 32);\r\n    this.load.spritesheet('bomberman_Solia',     'images/game/chars/6-preview.png', 32, 32);\r\n    this.load.spritesheet('bomberman_Kedan',     'images/game/chars/7-preview.png', 32, 32);\r\n    this.load.spritesheet('bomberman_Nigob',     'images/game/chars/8-preview.png', 32, 32);\r\n    this.load.spritesheet('bomberman_Baradir',   'images/game/chars/9-preview.png', 32, 32);\r\n    this.load.spritesheet('bomberman_Raviel',    'images/game/chars/10-preview.png', 32, 32);\r\n    this.load.spritesheet('bomberman_Valpo',     'images/game/chars/11-preview.png', 32, 32);\r\n  }\r\n\r\n  create() {\r\n    this.state.start('Menu');\r\n  }\r\n}\r\n\r\nexport default Preload;\r\n","import { Text, TextButton, GameSlots } from '../helpers/elements';\r\n\r\nclass Menu extends Phaser.State {\r\n\r\n  init() {\r\n    this.slotsWithGame = null;\r\n\r\n    clientSocket.on('display pending games', this.displayPendingGames.bind(this));\r\n  }\r\n\r\n  create() {\r\n    let background = this.add.image(this.game.world.centerX, this.game.world.centerY, 'main_menu');\r\n    background.anchor.setTo(0.5);\r\n\r\n\r\n    new Text({\r\n      game: this.game,\r\n      x: this.game.world.centerX,\r\n      y: this.game.world.centerY - 215,\r\n      text: 'Main Menu',\r\n      style: {\r\n        font: '35px Areal',\r\n        fill: '#9ec0ba',\r\n        stroke: '#7f9995',\r\n        strokeThickness: 3\r\n      }\r\n    })\r\n\r\n    new TextButton({\r\n      game: this.game,\r\n      x: this.game.world.centerX,\r\n      y: this.game.world.centerY + 195,\r\n      asset: 'buttons',\r\n      callback: this.hostGameAction,\r\n      callbackContext: this,\r\n      overFrame: 1,\r\n      outFrame: 0,\r\n      downFrame: 2,\r\n      upFrame: 0,\r\n      label: 'New Game',\r\n      style: {\r\n        font: '20px Areal',\r\n        fill: '#000000'\r\n      }\r\n    });\r\n\r\n    clientSocket.emit('enter lobby', this.displayPendingGames.bind(this));\r\n  }\r\n\r\n  update() {\r\n  }\r\n\r\n  hostGameAction() {\r\n    clientSocket.emit('leave lobby');\r\n    this.state.start('SelectMap');\r\n  }\r\n\r\n  displayPendingGames(availableGames) {\r\n    // NOTE: That is not optimal way to preview slots,\r\n    //       we should implement AddSlotToGroup, RemoveSlotFromGroup\r\n\r\n    // I triying to care about readability, not about performance.\r\n    if (this.slotsWithGame) {\r\n      this.slotsWithGame.destroy()\r\n    }\r\n\r\n    this.slotsWithGame = new GameSlots({\r\n      game: this.game,\r\n      availableGames: availableGames,\r\n      callback: this.joinGameAction,\r\n      callbackContext: this,\r\n      x: this.game.world.centerX - 220,\r\n      y: 160,\r\n      style: {\r\n        font: '35px Areal',\r\n        fill: '#efefef',\r\n        stroke: '#ae743a',\r\n        strokeThickness: 3\r\n      }\r\n    })\r\n  }\r\n\r\n  joinGameAction(game_id) {\r\n    clientSocket.emit('leave lobby');\r\n    // https://phaser.io/docs/2.6.2/Phaser.StateManager.html#start\r\n    this.state.start('PendingGame', true, false, game_id);\r\n  }\r\n}\r\n\r\nexport default Menu;\r\n","import { AVAILABLE_MAPS } from '../utils/constants';\r\nimport { Text, Button } from '../helpers/elements';\r\n\r\nclass SelectMap extends Phaser.State {\r\n\r\n  init() {\r\n    this.slider = new phaseSlider(this);\r\n  }\r\n\r\n  create() {\r\n    let background = this.add.image(this.game.world.centerX, this.game.world.centerY, 'main_menu');\r\n    background.anchor.setTo(0.5);\r\n\r\n    new Text({\r\n      game: this.game,\r\n      x: this.game.world.centerX,\r\n      y: this.game.world.centerY - 215,\r\n      text: 'Select Map',\r\n      style: {\r\n        font: '35px Areal',\r\n        fill: '#9ec0ba',\r\n        stroke: '#6f7975',\r\n        strokeThickness: 3\r\n      }\r\n    });\r\n\r\n\r\n    // WARN: https://github.com/netgfx/PhaseSlider/issues/1\r\n    let hotMapImage = new Phaser.Image(this.game, 0, 0, 'hot_map_preview');\r\n    let coldMapImage = new Phaser.Image(this.game, 0, 0, 'cold_map_preview');\r\n\r\n    this.slider.createSlider({\r\n      x: this.game.world.centerX - hotMapImage.width / 2,\r\n      y: this.game.world.centerY - coldMapImage.height / 2,\r\n      width: hotMapImage.width,\r\n      height: hotMapImage.height,\r\n      customHandlePrev: 'prev',\r\n      customHandleNext: 'next',\r\n      objects: [hotMapImage, coldMapImage]\r\n    });\r\n\r\n    new Button({\r\n      game: this.game,\r\n      x: this.game.world.centerX,\r\n      y: this.game.world.centerY + 195,\r\n      asset: 'check_icon',\r\n      callback: this.confirmStageSelection,\r\n      callbackContext: this,\r\n      overFrame: 1,\r\n      outFrame: 0,\r\n      downFrame: 2,\r\n      upFrame: 0,\r\n    })\r\n  }\r\n\r\n  confirmStageSelection() {\r\n    let map_name = AVAILABLE_MAPS[this.slider.getCurrentIndex()]\r\n\r\n    clientSocket.emit('create game', map_name, this.joinToNewGame.bind(this));\r\n  }\r\n\r\n  joinToNewGame(game_id) {\r\n    this.state.start('PendingGame', true, false, game_id);\r\n  }\r\n}\r\n\r\nexport default SelectMap;\r\n","import { Text, Button, TextButton, PlayerSlots } from '../helpers/elements';\r\n\r\nclass PendingGame extends Phaser.State {\r\n\r\n  init({ game_id }) {\r\n    this.slotsWithPlayer = null;\r\n\r\n    this.game_id = game_id;\r\n\r\n    clientSocket.on('update game', this.displayGameInfo.bind(this));\r\n    clientSocket.on('launch game', this.launchGame.bind(this));\r\n\r\n    clientSocket.emit('enter pending game', { game_id: this.game_id });\r\n  }\r\n\r\n  create() {\r\n    let background = this.add.image(this.game.world.centerX, this.game.world.centerY, 'main_menu');\r\n    background.anchor.setTo(0.5);\r\n\r\n    this.gameTitle = new Text({\r\n      game: this.game,\r\n      x: this.game.world.centerX,\r\n      y: this.game.world.centerY - 215,\r\n      text: '',\r\n      style: {\r\n        font: '35px Areal',\r\n        fill: '#9ec0ba',\r\n        stroke: '#6f7975',\r\n        strokeThickness: 3\r\n      }\r\n    })\r\n\r\n    this.startGameButton = new TextButton({\r\n      game: this.game,\r\n      x: this.game.world.centerX + 105,\r\n      y: this.game.world.centerY + 195,\r\n      asset: 'buttons',\r\n      callback: this.startGameAction,\r\n      callbackContext: this,\r\n      overFrame: 1,\r\n      outFrame: 0,\r\n      downFrame: 2,\r\n      upFrame: 0,\r\n      label: 'Start Game',\r\n      style: {\r\n        font: '20px Areal',\r\n        fill: '#000000'\r\n      }\r\n    });\r\n\r\n    this.startGameButton.disable()\r\n\r\n    new TextButton({\r\n      game: this.game,\r\n      x: this.game.world.centerX - 105,\r\n      y: this.game.world.centerY + 195,\r\n      asset: 'buttons',\r\n      callback: this.leaveGameAction,\r\n      callbackContext: this,\r\n      overFrame: 1,\r\n      outFrame: 0,\r\n      downFrame: 2,\r\n      upFrame: 0,\r\n      label: 'Leave Game',\r\n      style: {\r\n        font: '20px Areal',\r\n        fill: '#000000'\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  displayGameInfo({ current_game }) {\r\n    let players = Object.values(current_game.players);\r\n\r\n    this.gameTitle.text = `${current_game.name} [${players.length}]`\r\n\r\n    console.log(players);\r\n    if (this.slotsWithPlayer) {\r\n      this.slotsWithPlayer.destroy()\r\n    }\r\n\r\n    this.slotsWithPlayer = new PlayerSlots({\r\n      game: this.game,\r\n      max_players: current_game.max_players,\r\n      players: players,\r\n      x: this.game.world.centerX - 245,\r\n      y: this.game.world.centerY - 80,\r\n      asset_empty: 'bomberman_head_blank',\r\n      asset_player: 'bomberman_head_',\r\n      style: {\r\n        font: '20px Areal',\r\n        fill: '#48291c'\r\n      }\r\n    })\r\n\r\n    if(players.length > 1) {\r\n      this.startGameButton.enable();\r\n    } else {\r\n      this.startGameButton.disable();\r\n    }\r\n  }\r\n\r\n  leaveGameAction() {\r\n    clientSocket.emit('leave pending game');\r\n\r\n    this.state.start('Menu');\r\n  }\r\n\r\n  startGameAction() {\r\n    clientSocket.emit('start game');\r\n  }\r\n\r\n  launchGame(game) {\r\n    this.state.start('Play', true, false, game);\r\n  }\r\n}\r\n\r\nexport default PendingGame;\r\n","import { findFrom, findAndDestroyFrom } from '../utils/utils';\r\nimport { TILESET, LAYER } from '../utils/constants';\r\n\r\nimport Player from '../entities/player';\r\nimport EnemyPlayer from '../entities/enemy_player';\r\nimport Bomb from '../entities/bomb';\r\nimport Spoil from '../entities/spoil';\r\nimport FireBlast from '../entities/fire_blast';\r\nimport Bone from '../entities/bone';\r\n\r\nclass Play extends Phaser.State {\r\n  init(game) {\r\n    this.currentGame = game\r\n  }\r\n\r\n  create() {\r\n    this.createMap();\r\n    this.createPlayers();\r\n    this.setEventHandlers();\r\n\r\n    this.game.time.events.loop(400 , this.stopAnimationLoop.bind(this));\r\n  }\r\n\r\n  update() {\r\n    this.game.physics.arcade.collide(this.player, this.blockLayer);\r\n    this.game.physics.arcade.collide(this.player, this.enemies);\r\n    this.game.physics.arcade.collide(this.player, this.bombs);\r\n\r\n    this.game.physics.arcade.overlap(this.player, this.spoils, this.onPlayerVsSpoil, null, this);\r\n    this.game.physics.arcade.overlap(this.player, this.blasts, this.onPlayerVsBlast, null, this);\r\n  }\r\n\r\n  createMap() {\r\n    this.map = this.add.tilemap(this.currentGame.map_name);\r\n\r\n    this.map.addTilesetImage(TILESET);\r\n\r\n    this.blockLayer = this.map.createLayer(LAYER);\r\n    this.blockLayer.resizeWorld();\r\n\r\n    this.map.setCollision(this.blockLayer.layer.properties.collisionTiles)\r\n\r\n    this.player  = null;\r\n    this.bones   = this.game.add.group();\r\n    this.bombs   = this.game.add.group();\r\n    this.spoils  = this.game.add.group();\r\n    this.blasts  = this.game.add.group();\r\n    this.enemies = this.game.add.group();\r\n\r\n    this.game.physics.arcade.enable(this.blockLayer);\r\n  }\r\n\r\n  createPlayers() {\r\n    for (let player of Object.values(this.currentGame.players)) {\r\n      let setup = {\r\n        game:   this.game,\r\n        id:     player.id,\r\n        spawn:  player.spawn,\r\n        skin:   player.skin\r\n      }\r\n\r\n      if (player.id === clientSocket.id) {\r\n        this.player = new Player(setup);\r\n      } else {\r\n        this.enemies.add(new EnemyPlayer(setup))\r\n      }\r\n    }\r\n  }\r\n\r\n  setEventHandlers() {\r\n    clientSocket.on('move player', this.onMovePlayer.bind(this));\r\n    clientSocket.on('player win', this.onPlayerWin.bind(this));\r\n    clientSocket.on('show bomb', this.onShowBomb.bind(this));\r\n    clientSocket.on('detonate bomb', this.onDetonateBomb.bind(this));\r\n    clientSocket.on('spoil was picked', this.onSpoilWasPicked.bind(this));\r\n    clientSocket.on('show bones', this.onShowBones.bind(this));\r\n    clientSocket.on('player disconnect', this.onPlayerDisconnect.bind(this));\r\n  }\r\n\r\n  onPlayerVsSpoil(player, spoil) {\r\n    clientSocket.emit('pick up spoil', { spoil_id: spoil.id });\r\n    spoil.kill();\r\n  }\r\n\r\n  onPlayerVsBlast(player, blast) {\r\n    if (player.alive) {\r\n      clientSocket.emit('player died', { col: player.currentCol(), row: player.currentRow() });\r\n      player.becomesDead()\r\n    }\r\n  }\r\n\r\n  onMovePlayer({ player_id, x, y }) {\r\n    let enemy = findFrom(player_id, this.enemies);\r\n    if (!enemy) { return }\r\n\r\n    enemy.goTo({ x: x, y: y })\r\n  }\r\n\r\n  stopAnimationLoop() {\r\n    for (let enemy of this.enemies.children) {\r\n      if (enemy.lastMoveAt < this.game.time.now - 200) {\r\n        enemy.animations.stop();\r\n      }\r\n    }\r\n  }\r\n\r\n  onShowBomb({ bomb_id, col, row }) {\r\n    this.bombs.add(new Bomb(this.game, bomb_id, col, row));\r\n  }\r\n\r\n  onDetonateBomb({ bomb_id, blastedCells }) {\r\n    // Remove Bomb:\r\n    findAndDestroyFrom(bomb_id, this.bombs)\r\n\r\n    // Render Blast:\r\n    for (let cell of blastedCells) {\r\n      this.blasts.add(new FireBlast(this.game, cell));\r\n    };\r\n\r\n    // Destroy Tiles:\r\n    for (let cell of blastedCells) {\r\n      if (!cell.destroyed) { continue }\r\n\r\n      this.map.putTile(this.blockLayer.layer.properties.empty, cell.col, cell.row, this.blockLayer);\r\n    };\r\n\r\n    // Add Spoils:\r\n    for (let cell of blastedCells) {\r\n      if (!cell.destroyed) { continue }\r\n      if (!cell.spoil) { continue }\r\n\r\n      this.spoils.add(new Spoil(this.game, cell.spoil));\r\n    };\r\n  }\r\n\r\n  onSpoilWasPicked({ player_id, spoil_id, spoil_type }){\r\n    if (player_id === this.player.id){\r\n      this.player.pickSpoil(spoil_type)\r\n    }\r\n\r\n    findAndDestroyFrom(spoil_id, this.spoils)\r\n  }\r\n\r\n  onShowBones({ player_id, col, row }) {\r\n    this.bones.add(new Bone(this.game, col, row));\r\n\r\n    findAndDestroyFrom(player_id, this.enemies)\r\n  }\r\n\r\n  onPlayerWin(winner_skin) {\r\n    clientSocket.emit('leave game');\r\n\r\n    this.state.start('Win', true, false, winner_skin);\r\n  }\r\n\r\n  onPlayerDisconnect({ player_id }) {\r\n    findAndDestroyFrom(player_id, this.enemies);\r\n\r\n    if (this.enemies.children.length >= 1) { return }\r\n\r\n    this.onPlayerWin()\r\n  }\r\n}\r\n\r\nexport default Play;\r\n","export const findFrom = function(id, entities) {\r\n  for (let entity of entities.children) {\r\n    if (entity.id !== id) { continue }\r\n\r\n    return entity\r\n  }\r\n  return null;\r\n}\r\n\r\nexport const findAndDestroyFrom = function(id, entities) {\r\n  let entity = findFrom(id, entities);\r\n  if (!entity) { return }\r\n\r\n  entity.destroy()\r\n}\r\n","import {\r\n  PING, TILE_SIZE, MAX_SPEED, STEP_SPEED, INITIAL_SPEED, SPEED, POWER, DELAY,\r\n  MIN_DELAY, STEP_DELAY, INITIAL_DELAY, INITIAL_POWER, STEP_POWER\r\n} from '../utils/constants';\r\n\r\nimport Info from './info';\r\nimport { SpoilNotification, Text } from '../helpers/elements';\r\n\r\nexport default class Player extends Phaser.Sprite {\r\n\r\n  constructor({ game, id, spawn, skin }) {\r\n    super(game, spawn.x, spawn.y, 'bomberman_' + skin);\r\n\r\n    this.game = game;\r\n    this.id = id;\r\n\r\n    this.prevPosition = { x: spawn.x, y: spawn.y };\r\n\r\n    this.delay = INITIAL_DELAY;\r\n    this.power = INITIAL_POWER;\r\n    this.speed = INITIAL_SPEED;\r\n    this._lastBombTime = 0;\r\n\r\n    this.game.add.existing(this);\r\n    this.game.physics.arcade.enable(this);\r\n    this.body.setSize(20, 20, 6, 6);\r\n\r\n    game.time.events.loop(PING , this.positionUpdaterLoop.bind(this));\r\n\r\n    this.animations.add('up', [9, 10, 11], 15, true);\r\n    this.animations.add('down', [0, 1, 2], 15, true);\r\n    this.animations.add('right', [6, 7, 8], 15, true);\r\n    this.animations.add('left', [3, 4, 5], 15, true);\r\n\r\n    this.info = new Info({ game: this.game, player: this });\r\n\r\n    this.defineKeyboard()\r\n    this.defineSelf(skin)\r\n  }\r\n\r\n  update() {\r\n    if (this.alive) {\r\n      this.handleMoves()\r\n      this.handleBombs()\r\n    }\r\n\r\n    // this.game.debug.body(this);\r\n    // this.game.debug.spriteInfo(this, 32, 32);\r\n  }\r\n\r\n  defineKeyboard() {\r\n    this.upKey    = this.game.input.keyboard.addKey(Phaser.Keyboard.UP)\r\n    this.downKey  = this.game.input.keyboard.addKey(Phaser.Keyboard.DOWN)\r\n    this.leftKey  = this.game.input.keyboard.addKey(Phaser.Keyboard.LEFT)\r\n    this.rightKey = this.game.input.keyboard.addKey(Phaser.Keyboard.RIGHT)\r\n    this.spaceKey = this.game.input.keyboard.addKey(Phaser.Keyboard.SPACEBAR)\r\n  }\r\n\r\n  handleMoves() {\r\n    this.body.velocity.set(0);\r\n    let animationsArray = []\r\n\r\n    if (this.leftKey.isDown){\r\n      this.body.velocity.x = -this.speed;\r\n      animationsArray.push('left')\r\n    } else if (this.rightKey.isDown) {\r\n      this.body.velocity.x = this.speed;\r\n      animationsArray.push('right')\r\n    }\r\n\r\n    if (this.upKey.isDown) {\r\n      this.body.velocity.y = -this.speed;\r\n      animationsArray.push('up')\r\n    } else if (this.downKey.isDown) {\r\n      this.body.velocity.y = this.speed;\r\n      animationsArray.push('down')\r\n    }\r\n\r\n    let currentAnimation = animationsArray[0]\r\n    if (currentAnimation){\r\n      this.animations.play(currentAnimation)\r\n      return\r\n    }\r\n\r\n    this.animations.stop();\r\n  }\r\n\r\n  handleBombs() {\r\n    if (this.game.input.keyboard.isDown(Phaser.Keyboard.SPACEBAR)) {\r\n      let now = this.game.time.now;\r\n\r\n      if (now > this._lastBombTime) {\r\n        this._lastBombTime = now + this.delay;\r\n\r\n        clientSocket.emit('create bomb', { col: this.currentCol(), row: this.currentRow() });\r\n      }\r\n    }\r\n  }\r\n\r\n  currentCol() {\r\n    return Math.floor(this.body.position.x / TILE_SIZE)\r\n  }\r\n\r\n  currentRow() {\r\n    return Math.floor(this.body.position.y / TILE_SIZE)\r\n  }\r\n\r\n  positionUpdaterLoop() {\r\n    let newPosition = { x: this.position.x, y: this.position.y }\r\n\r\n    if (this.prevPosition.x !== newPosition.x || this.prevPosition.y !== newPosition.y) {\r\n      clientSocket.emit('update player position', newPosition);\r\n      this.prevPosition = newPosition;\r\n    }\r\n  }\r\n\r\n  becomesDead() {\r\n    this.info.showDeadInfo()\r\n    this.kill();\r\n  }\r\n\r\n  pickSpoil( spoil_type ){\r\n    if ( spoil_type === SPEED ){ this.increaseSpeed() }\r\n    if ( spoil_type === POWER ){ this.increasePower() }\r\n    if ( spoil_type === DELAY ){ this.increaseDelay() }\r\n  }\r\n\r\n  increaseSpeed(){\r\n    let asset = 'speed_up_no_bonus'\r\n\r\n    if (this.speed < MAX_SPEED) {\r\n      this.speed = this.speed + STEP_SPEED;\r\n      this.info.refreshStatistic();\r\n      asset = 'speed_up_bonus'\r\n    }\r\n\r\n    new SpoilNotification({ game: this.game, asset: asset, x: this.position.x, y: this.position.y })\r\n  }\r\n\r\n  increaseDelay(){\r\n    let asset = 'delay_up_no_bonus'\r\n\r\n    if (this.delay > MIN_DELAY){\r\n      this.delay -= STEP_DELAY;\r\n      this.info.refreshStatistic();\r\n      asset = 'delay_up_bonus'\r\n    }\r\n\r\n    new SpoilNotification({ game: this.game, asset: asset, x: this.position.x, y: this.position.y })\r\n  }\r\n\r\n  increasePower(){\r\n    let asset = 'power_up_bonus'\r\n\r\n    this.power += STEP_POWER;\r\n    this.info.refreshStatistic();\r\n\r\n    new SpoilNotification({ game: this.game, asset: asset, x: this.position.x, y: this.position.y })\r\n  }\r\n\r\n  defineSelf(name) {\r\n    let playerText = new Text({\r\n      game: this.game,\r\n      x: TILE_SIZE / 2,\r\n      y: -10,\r\n      text: `\\u272E ${name} \\u272E`,\r\n      style: {\r\n        font: '15px Areal',\r\n        fill: '#FFFFFF',\r\n          stroke: '#000000',\r\n          strokeThickness: 3\r\n      }\r\n    })\r\n\r\n    this.addChild(playerText);\r\n  }\r\n}\r\n","export default class Info {\r\n\r\n  constructor({ game, player }) {\r\n    this.game = game;\r\n    this.player = player;\r\n\r\n    this.style    = { font: '14px Arial', fill: '#ffffff', align: 'left' }\r\n    this.redStyle = { font: '30px Arial', fill: '#ff0044', align: 'center' };\r\n\r\n    let bootsIcon  = new Phaser.Image(this.game, 5, 2, 'placeholder_speed');\r\n    this.speedText = new Phaser.Text(this.game, 35, 7, this.speedLabel(), this.style);\r\n    bootsIcon.addChild(this.speedText)\r\n    this.game.add.existing(bootsIcon);\r\n\r\n    let powerIcon  = new Phaser.Image(this.game, 110, 2, 'placeholder_power');\r\n    this.powerText = new Phaser.Text(this.game, 35, 7, this.powerLabel(), this.style);\r\n    powerIcon.addChild(this.powerText)\r\n    this.game.add.existing(powerIcon);\r\n\r\n    let delayIcon  = new Phaser.Image(this.game, 215, 2, 'placeholder_time');\r\n    this.delayText = new Phaser.Text(this.game, 35, 7, this.delayLabel(), this.style);\r\n    delayIcon.addChild(this.delayText)\r\n    this.game.add.existing(delayIcon);\r\n\r\n    this.deadText = this.game.add.text(this.game.world.centerX, this.game.world.height - 30, 'You died :(', this.redStyle);\r\n    this.deadText.anchor.set(0.5);\r\n    this.deadText.visible = false\r\n  }\r\n\r\n  refreshStatistic() {\r\n    this.speedText.text = this.speedLabel();\r\n    this.powerText.text = this.powerLabel();\r\n    this.delayText.text = this.delayLabel();\r\n  }\r\n\r\n  showDeadInfo() {\r\n    this.deadText.visible = true\r\n  }\r\n\r\n  speedLabel() {\r\n    return this.player.speed\r\n  }\r\n\r\n  powerLabel() {\r\n    return `x ${this.player.power}`\r\n  }\r\n\r\n  delayLabel() {\r\n    return `${this.player.delay / 1000} sec.`\r\n  }\r\n}\r\n","import { TILE_SIZE, PING } from '../utils/constants';\r\nimport { Text } from '../helpers/elements';\r\n\r\nexport default class EnemyPlayer extends Phaser.Sprite {\r\n\r\n  constructor({ game, id, spawn, skin }) {\r\n    super(game, spawn.x, spawn.y, 'bomberman_' + skin);\r\n\r\n    this.game = game\r\n    this.id = id;\r\n\r\n    this.currentPosition = spawn;\r\n    this.lastMoveAt = 0;\r\n\r\n    this.game.physics.arcade.enable(this);\r\n    this.body.setSize(20, 20, 6, 6);\r\n    this.body.immovable = true;\r\n\r\n    this.animations.add('up', [9, 10, 11], 15, true);\r\n    this.animations.add('down', [0, 1, 2], 15, true);\r\n    this.animations.add('right', [6, 7, 8], 15, true);\r\n    this.animations.add('left', [3, 4, 5], 15, true);\r\n\r\n    this.defineSelf(skin)\r\n  }\r\n\r\n  update () {\r\n    // this.game.debug.body(this);\r\n  }\r\n\r\n  goTo(newPosition) {\r\n    this.lastMoveAt = this.game.time.now;\r\n\r\n    this.animateFace(newPosition);\r\n\r\n    this.game.add.tween(this).to(newPosition, PING, Phaser.Easing.Linear.None, true);\r\n  }\r\n\r\n  animateFace(newPosition) {\r\n    let face = 'down';\r\n    let diffX = newPosition.x - this.currentPosition.x;\r\n    let diffY = newPosition.y - this.currentPosition.y;\r\n\r\n    if (diffX < 0) {\r\n      face = 'left'\r\n    } else if (diffX > 0) {\r\n      face = 'right'\r\n    } else if (diffY < 0) {\r\n      face = 'up'\r\n    } else if (diffY > 0) {\r\n      face = 'down'\r\n    }\r\n\r\n    this.animations.play(face)\r\n    this.currentPosition = newPosition;\r\n  }\r\n\r\n  defineSelf(name) {\r\n    let playerText = new Text({\r\n      game: this.game,\r\n      x: TILE_SIZE / 2,\r\n      y: -10,\r\n      text: name,\r\n      style: {\r\n        font: '14px Areal',\r\n        fill: '#FF0000',\r\n          stroke: '#000000',\r\n          strokeThickness: 3\r\n      }\r\n    })\r\n\r\n    this.addChild(playerText);\r\n  }\r\n}\r\n","import { TILE_SIZE, EXPLOSION_TIME } from '../utils/constants';\r\n\r\nexport default class Bomb extends Phaser.Sprite {\r\n\r\n  constructor(game, id, col, row) {\r\n    let centerCol = (col * TILE_SIZE) + TILE_SIZE / 2\r\n    let centerRow = (row * TILE_SIZE) + TILE_SIZE / 2\r\n\r\n    super(game, centerCol, centerRow, 'bomb_tileset');\r\n    this.scale.setTo(0.7);\r\n    this.anchor.setTo(0.5);\r\n\r\n    this.game = game\r\n    this.id = id;\r\n\r\n    this.game.physics.arcade.enable(this);\r\n\r\n    this.game.add.tween(this.scale).to({ x: 1.2, y: 1.2 }, EXPLOSION_TIME, Phaser.Easing.Linear.None, true);\r\n\r\n    this.body.immovable = true;\r\n    // TODO: https://phaser.io/docs/2.4.4/Phaser.AnimationManager.html#add\r\n    this.animations.add('bomb', [0,1,2,3,4,5,6,7,8,9,10,11,12,13], 6, true);\r\n    this.animations.play('bomb');\r\n  }\r\n\r\n  update() {\r\n    // this.game.debug.body(this);\r\n  }\r\n\r\n}\r\n","import { SPEED, POWER, DELAY, TILE_SIZE } from '../utils/constants';\r\n\r\nexport default class Spoil extends Phaser.Sprite {\r\n\r\n  constructor(game, spoil) {\r\n\r\n    let spoil_type;\r\n    if (spoil.spoil_type === DELAY) {\r\n      spoil_type = 0\r\n    }\r\n    if (spoil.spoil_type === POWER) {\r\n      spoil_type =  1\r\n    }\r\n    if (spoil.spoil_type === SPEED) {\r\n      spoil_type = 2\r\n    }\r\n\r\n    super(game, (spoil.col * TILE_SIZE), (spoil.row * TILE_SIZE), 'spoil_tileset', spoil_type);\r\n\r\n    this.id = spoil.id\r\n\r\n    this.game.physics.arcade.enable(this);\r\n  }\r\n\r\n}\r\n","import { TILE_SIZE } from '../utils/constants';\r\n\r\nexport default class FireBlast extends Phaser.Sprite {\r\n\r\n  constructor(game, cell) {\r\n    super(game, (cell.col * TILE_SIZE), (cell.row * TILE_SIZE), cell.type, 0);\r\n\r\n    this.game = game\r\n\r\n    this.animations.add('blast', [0, 1, 2, 3, 4]);\r\n\r\n    // 15 - framerate, loop, kill_on_complete\r\n    this.play('blast', 15, false, true);\r\n\r\n    this.game.physics.arcade.enable(this);\r\n  }\r\n\r\n}\r\n","import { TILE_SIZE } from '../utils/constants';\r\n\r\nexport default class Bone extends Phaser.Sprite {\r\n\r\n  constructor(game, col, row) {\r\n    super(game, (col * TILE_SIZE), (row * TILE_SIZE), 'bone_tileset');\r\n  }\r\n\r\n}\r\n","import { Text } from '../helpers/elements';\r\n\r\nclass Win extends Phaser.State {\r\n\r\n  init(winner_skin) {\r\n    this.skin = winner_skin\r\n  }\r\n\r\n  create() {\r\n    new Text({\r\n      game: this.game,\r\n      x: this.game.world.centerX,\r\n      y: this.game.world.centerY,\r\n      text: this.winnerText(),\r\n      style: {\r\n        font: '30px Areal',\r\n        fill: '#FFFFFF'\r\n      }\r\n    })\r\n  }\r\n\r\n  update() {\r\n    if( this.game.input.keyboard.isDown(Phaser.Keyboard.ENTER) ) {\r\n      this.returnToMenu();\r\n    }\r\n  }\r\n\r\n  returnToMenu() {\r\n    this.state.start('Menu');\r\n  }\r\n\r\n  winnerText() {\r\n    if (this.skin) {\r\n      return `Player: \"${this.skin}\" won! Press Enter to return to main menu.`\r\n    }\r\n\r\n    return 'Opponent left! Press Enter to return to main menu.'\r\n  }\r\n}\r\n\r\nexport default Win;\r\n"],"sourceRoot":""}